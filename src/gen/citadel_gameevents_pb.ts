// @generated by protoc-gen-es v2.6.0 with parameter "target=ts,json_types=true"
// @generated from file citadel_gameevents.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { CMsgQAngle, CMsgQAngleJson, CMsgVector, CMsgVectorJson } from "./networkbasetypes_pb";
import { file_networkbasetypes } from "./networkbasetypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file citadel_gameevents.proto.
 */
export const file_citadel_gameevents: GenFile = /*@__PURE__*/
  fileDesc("ChhjaXRhZGVsX2dhbWVldmVudHMucHJvdG8i9QQKD0NNc2dGaXJlQnVsbGV0cxIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBmFuZ2xlcxgCIAEoCzILLkNNc2dRQW5nbGUSDAoEc2VlZBgEIAEoDRIaCg5zaG9vdGVyX2VudGl0eRgFIAEoBToCLTESEwoHYWJpbGl0eRgHIAEoBToCLTESGwoTcGVuZXRyYXRpb25fcGVyY2VudBgIIAEoAhIOCgZzcHJlYWQYCSABKAISHAoOZmlyZWRfZnJvbV9ndW4YCiABKAg6BHRydWUSGAoQYnVsbGV0c19vdmVycmlkZRgLIAEoDRI9ChJ0cmFjZXJfcmVwbGFjZW1lbnQYDCABKAsyIS5DTXNnRmlyZUJ1bGxldHMuVHJhY2VyQXNzaWdubWVudBI8ChF0cmFjZXJfYWRkaXRpb25hbBgNIAMoCzIhLkNNc2dGaXJlQnVsbGV0cy5UcmFjZXJBc3NpZ25tZW50EiQKD2FuZ2xlc19vcmlnaW5hbBgOIAEoCzILLkNNc2dRQW5nbGUSGgoSd2VhcG9uX3N1YmNsYXNzX2lkGA8gASgNEhMKC3Nob3RfbnVtYmVyGBAgASgNEhkKDWlnbm9yZV9lbnRpdHkYESABKAU6Ai0xEhEKCW1heF9yYW5nZRgSIAEoAhIPCgdzaG90X2lkGBMgASgNEigKGnByZWRpY3RfaGl0c19hZ2FpbnN0X3VuaXRzGBQgASgIOgR0cnVlGkcKEFRyYWNlckFzc2lnbm1lbnQSGgoSdHJhY2VyX3Jlc291cmNlX2lkGAEgASgEEhcKD2J1bGxldF9pbmRpY2llcxgCIAEoDSKzAgoQQ01zZ0J1bGxldEltcGFjdBIgCgt0cmFjZV9zdGFydBgBIAEoCzILLkNNc2dWZWN0b3ISIgoNaW1wYWN0X29yaWdpbhgCIAEoCzILLkNNc2dWZWN0b3ISIwoOc3VyZmFjZV9ub3JtYWwYAyABKAsyCy5DTXNnVmVjdG9yEg4KBmRhbWFnZRgEIAEoDRIUCgxzdXJmYWNlX3R5cGUYBSABKA0SHAoQYWJpbGl0eV9lbnRpbmRleBgHIAEoBToCLTESHQoRaW1wYWN0ZWRfZW50aW5kZXgYCCABKAU6Ai0xEhcKD2ltcGFjdGVkX2hpdGJveBgJIAEoDRIaChJ3ZWFwb25fc3ViY2xhc3NfaWQYCiABKA0SHAoQc2hvb3Rlcl9lbnRpbmRleBgLIAEoBToCLTEiTAoTQ01zZ1BsYXllckFuaW1FdmVudBIYCgZwbGF5ZXIYASABKAc6CDE2Nzc3MjE1Eg0KBWV2ZW50GAIgASgNEgwKBGRhdGEYAyABKAUiphAKGUNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXISVAoEdHlwZRgBIAIoDjIgLlBBUlRJQ0xFX1NZU1RFTV9NQU5BR0VSX01FU1NBR0U6JFBBUlRJQ0xFX1NZU1RFTV9NQU5BR0VSX0VWRU5UX0NSRUFURRINCgVpbmRleBgCIAIoDRJCCg9jcmVhdGVfcGFydGljbGUYAyABKAsyKS5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLkNyZWF0ZVBhcnRpY2xlEkQKEGRlc3Ryb3lfcGFydGljbGUYBCABKAsyKi5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLkRlc3Ryb3lQYXJ0aWNsZRJXChpkZXN0cm95X3BhcnRpY2xlX2ludm9sdmluZxgFIAEoCzIzLkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuRGVzdHJveVBhcnRpY2xlSW52b2x2aW5nEk8KFnJlbGVhc2VfcGFydGljbGVfaW5kZXgYBiABKAsyLy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlJlbGVhc2VQYXJ0aWNsZUluZGV4EkIKD3VwZGF0ZV9wYXJ0aWNsZRgHIAEoCzIpLkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuVXBkYXRlUGFydGljbGUSSQoTdXBkYXRlX3BhcnRpY2xlX2Z3ZBgIIAEoCzIsLkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuVXBkYXRlUGFydGljbGVGd2QSTwoWdXBkYXRlX3BhcnRpY2xlX29yaWVudBgJIAEoCzIvLkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuVXBkYXRlUGFydGljbGVPcmllbnQSUwoYdXBkYXRlX3BhcnRpY2xlX2ZhbGxiYWNrGAogASgLMjEuQ01zZ1BhcnRpY2xlU3lzdGVtTWFuYWdlci5VcGRhdGVQYXJ0aWNsZUZhbGxiYWNrEk8KFnVwZGF0ZV9wYXJ0aWNsZV9vZmZzZXQYCyABKAsyLy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBhcnRpY2xlT2Zmc2V0EkkKE3VwZGF0ZV9wYXJ0aWNsZV9lbnQYDCABKAsyLC5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBhcnRpY2xlRW50Ek8KFnVwZGF0ZV9wYXJ0aWNsZV9mcm96ZW4YDSABKAsyLy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBhcnRpY2xlRnJvemVuElgKG3VwZGF0ZV9wYXJ0aWNsZV9zaG91bGRfZHJhdxgOIAEoCzIzLkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuVXBkYXRlUGFydGljbGVTaG91bGREcmF3Gp8BCg5DcmVhdGVQYXJ0aWNsZRIbChNwYXJ0aWNsZV9uYW1lX2luZGV4GAEgASgGEhMKC2F0dGFjaF90eXBlGAIgASgFEh8KDWVudGl0eV9oYW5kbGUYAyABKA06CDE2Nzc3MjE1Eh0KCHBvc2l0aW9uGAQgASgLMgsuQ01zZ1ZlY3RvchIbCgZhbmdsZXMYBSABKAsyCy5DTXNnUUFuZ2xlGi4KD0Rlc3Ryb3lQYXJ0aWNsZRIbChNkZXN0cm95X2ltbWVkaWF0ZWx5GAEgASgIGlgKGERlc3Ryb3lQYXJ0aWNsZUludm9sdmluZxIbChNkZXN0cm95X2ltbWVkaWF0ZWx5GAEgASgIEh8KDWVudGl0eV9oYW5kbGUYAyABKA06CDE2Nzc3MjE1GhYKFFJlbGVhc2VQYXJ0aWNsZUluZGV4GkYKDlVwZGF0ZVBhcnRpY2xlEhUKDWNvbnRyb2xfcG9pbnQYASABKAUSHQoIcG9zaXRpb24YAiABKAsyCy5DTXNnVmVjdG9yGkgKEVVwZGF0ZVBhcnRpY2xlRndkEhUKDWNvbnRyb2xfcG9pbnQYASABKAUSHAoHZm9yd2FyZBgCIAEoCzILLkNNc2dWZWN0b3IafwoUVXBkYXRlUGFydGljbGVPcmllbnQSFQoNY29udHJvbF9wb2ludBgBIAEoBRIcCgdmb3J3YXJkGAIgASgLMgsuQ01zZ1ZlY3RvchIZCgRsZWZ0GAMgASgLMgsuQ01zZ1ZlY3RvchIXCgJ1cBgEIAEoCzILLkNNc2dWZWN0b3IaTgoWVXBkYXRlUGFydGljbGVGYWxsYmFjaxIVCg1jb250cm9sX3BvaW50GAEgASgFEh0KCHBvc2l0aW9uGAIgASgLMgsuQ01zZ1ZlY3RvchqcAQoRVXBkYXRlUGFydGljbGVFbnQSFQoNY29udHJvbF9wb2ludBgBIAEoBRIfCg1lbnRpdHlfaGFuZGxlGAIgASgNOggxNjc3NzIxNRITCgthdHRhY2hfdHlwZRgDIAEoBRISCgphdHRhY2htZW50GAQgASgFEiYKEWZhbGxiYWNrX3Bvc2l0aW9uGAUgASgLMgsuQ01zZ1ZlY3RvchpRChRVcGRhdGVQYXJ0aWNsZU9mZnNldBIVCg1jb250cm9sX3BvaW50GAEgASgFEiIKDW9yaWdpbl9vZmZzZXQYAiABKAsyCy5DTXNnVmVjdG9yGioKFFVwZGF0ZVBhcnRpY2xlRnJvemVuEhIKCnNldF9mcm96ZW4YASABKAgaLwoYVXBkYXRlUGFydGljbGVTaG91bGREcmF3EhMKC3Nob3VsZF9kcmF3GAEgASgIIscBChRDTXNnU2NyZWVuVGV4dFByZXR0eRINCgV4X3BvcxgBIAEoAhINCgV5X3BvcxgCIAEoAhIMCgRsaW5lGAMgASgFEgwKBHRleHQYBCABKAkSCQoBchgFIAEoBRIJCgFnGAYgASgFEgkKAWIYByABKAUSCQoBYRgIIAEoBRIQCghkdXJhdGlvbhgJIAEoAhIRCglmb250X25hbWUYCiABKAkSEQoJZm9udF9zaXplGAsgASgFEhEKCWJvbGRfZm9udBgMIAEoCCKWAQoZQ01zZ1NlcnZlclJlcXVlc3RlZFRyYWNlchIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhgKA2VuZBgCIAEoCzILLkNNc2dWZWN0b3ISFAoId2VhcG9uaWQYAyABKAU6Ai0xEh8KDWVudGl0eV9oYW5kbGUYBCABKA06CDE2Nzc3MjE1EgsKA2RwcxgFIAEoAiJ8ChlDTXNnRW5hYmxlU2F0Vm9sdW1lc0V2ZW50EgwKBG1vZGUYASABKA0SFAoMZGVzYXRfYW1vdW50GAIgASgCEhAKCHNhdF90aW50GAMgASgHEhIKCmRlc2F0X3RpbnQYBCABKAcSFQoNb3V0bGluZV9jb2xvchgFIAEoByKDAgoXQ01zZ1BsYWNlU2F0Vm9sdW1lRXZlbnQSHQoIcG9zaXRpb24YASABKAsyCy5DTXNnVmVjdG9yEh4KCWRpcmVjdGlvbhgCIAEoCzILLkNNc2dWZWN0b3ISDgoGcmFkaXVzGAMgASgCEhgKEGZhbGxvZmZfZGlzdGFuY2UYBCABKAISEQoJdGhldGFfZG90GAUgASgCEg8KB3BoaV9kb3QYBiABKAISHwoNZW50aXR5X2hhbmRsZRgHIAEoDToIMTY3NzcyMTUSGQoRYXR0YWNobWVudF9oYW5kbGUYCCABKA0SDAoEdHlwZRgJIAEoDRIRCgl2b2x1bWVfaWQYCiABKAUiLQoYQ01zZ1JlbW92ZVNhdFZvbHVtZUV2ZW50EhEKCXZvbHVtZV9pZBgBIAEoBSIcChpDTXNnRGlzYWJsZVNhdFZvbHVtZXNFdmVudCJXChBDTXNnUmVtb3ZlQnVsbGV0EhwKEHNob290ZXJfZW50aW5kZXgYASABKAU6Ai0xEg8KB3Nob3RfaWQYAiABKA0SFAoMYnVsbGV0X2luZGV4GAMgASgNKqECChJFQ2l0YWRlbEdhbWVFdmVudHMSEwoOR0VfRmlyZUJ1bGxldHMQwgMSFwoSR0VfUGxheWVyQW5pbUV2ZW50EMMDEh0KGEdFX1BhcnRpY2xlU3lzdGVtTWFuYWdlchDKAxIYChNHRV9TY3JlZW5UZXh0UHJldHR5EMsDEhQKD0dFX0J1bGxldEltcGFjdBDNAxIdChhHRV9FbmFibGVTYXRWb2x1bWVzRXZlbnQQzgMSGwoWR0VfUGxhY2VTYXRWb2x1bWVFdmVudBDPAxIeChlHRV9EaXNhYmxlU2F0Vm9sdW1lc0V2ZW50ENADEhwKF0dFX1JlbW92ZVNhdFZvbHVtZUV2ZW50ENEDEhQKD0dFX1JlbW92ZUJ1bGxldBDSAyrhBAofUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfTUVTU0FHRRIoCiRQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9DUkVBVEUQABIpCiVQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9ERVNUUk9ZEAESMwovUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfRVZFTlRfREVTVFJPWV9JTlZPTFZJTkcQAhIpCiVQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9SRUxFQVNFEAMSKAokUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfRVZFTlRfVVBEQVRFEAQSMAosUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfRVZFTlRfVVBEQVRFX0ZPUldBUkQQBRI0CjBQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9VUERBVEVfT1JJRU5UQVRJT04QBhIxCi1QQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9VUERBVEVfRkFMTEJBQ0sQBxIsCihQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9VUERBVEVfRU5UEAgSLworUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfRVZFTlRfVVBEQVRFX09GRlNFVBAJEi8KK1BBUlRJQ0xFX1NZU1RFTV9NQU5BR0VSX0VWRU5UX1VQREFURV9GUk9aRU4QChI0CjBQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9VUERBVEVfU0hPVUxEX0RSQVcQCw", [file_google_protobuf_descriptor, file_networkbasetypes]);

/**
 * @generated from message CMsgFireBullets
 */
export type CMsgFireBullets = Message<"CMsgFireBullets"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional uint32 seed = 4;
   */
  seed: number;

  /**
   * @generated from field: optional int32 shooter_entity = 5 [default = -1];
   */
  shooterEntity: number;

  /**
   * @generated from field: optional int32 ability = 7 [default = -1];
   */
  ability: number;

  /**
   * @generated from field: optional float penetration_percent = 8;
   */
  penetrationPercent: number;

  /**
   * @generated from field: optional float spread = 9;
   */
  spread: number;

  /**
   * @generated from field: optional bool fired_from_gun = 10 [default = true];
   */
  firedFromGun: boolean;

  /**
   * @generated from field: optional uint32 bullets_override = 11;
   */
  bulletsOverride: number;

  /**
   * @generated from field: optional CMsgFireBullets.TracerAssignment tracer_replacement = 12;
   */
  tracerReplacement?: CMsgFireBullets_TracerAssignment;

  /**
   * @generated from field: repeated CMsgFireBullets.TracerAssignment tracer_additional = 13;
   */
  tracerAdditional: CMsgFireBullets_TracerAssignment[];

  /**
   * @generated from field: optional CMsgQAngle angles_original = 14;
   */
  anglesOriginal?: CMsgQAngle;

  /**
   * @generated from field: optional uint32 weapon_subclass_id = 15;
   */
  weaponSubclassId: number;

  /**
   * @generated from field: optional uint32 shot_number = 16;
   */
  shotNumber: number;

  /**
   * @generated from field: optional int32 ignore_entity = 17 [default = -1];
   */
  ignoreEntity: number;

  /**
   * @generated from field: optional float max_range = 18;
   */
  maxRange: number;

  /**
   * @generated from field: optional uint32 shot_id = 19;
   */
  shotId: number;

  /**
   * @generated from field: optional bool predict_hits_against_units = 20 [default = true];
   */
  predictHitsAgainstUnits: boolean;
};

/**
 * @generated from message CMsgFireBullets
 */
export type CMsgFireBulletsJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional uint32 seed = 4;
   */
  seed?: number;

  /**
   * @generated from field: optional int32 shooter_entity = 5 [default = -1];
   */
  shooterEntity?: number;

  /**
   * @generated from field: optional int32 ability = 7 [default = -1];
   */
  ability?: number;

  /**
   * @generated from field: optional float penetration_percent = 8;
   */
  penetrationPercent?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float spread = 9;
   */
  spread?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional bool fired_from_gun = 10 [default = true];
   */
  firedFromGun?: boolean;

  /**
   * @generated from field: optional uint32 bullets_override = 11;
   */
  bulletsOverride?: number;

  /**
   * @generated from field: optional CMsgFireBullets.TracerAssignment tracer_replacement = 12;
   */
  tracerReplacement?: CMsgFireBullets_TracerAssignmentJson;

  /**
   * @generated from field: repeated CMsgFireBullets.TracerAssignment tracer_additional = 13;
   */
  tracerAdditional?: CMsgFireBullets_TracerAssignmentJson[];

  /**
   * @generated from field: optional CMsgQAngle angles_original = 14;
   */
  anglesOriginal?: CMsgQAngleJson;

  /**
   * @generated from field: optional uint32 weapon_subclass_id = 15;
   */
  weaponSubclassId?: number;

  /**
   * @generated from field: optional uint32 shot_number = 16;
   */
  shotNumber?: number;

  /**
   * @generated from field: optional int32 ignore_entity = 17 [default = -1];
   */
  ignoreEntity?: number;

  /**
   * @generated from field: optional float max_range = 18;
   */
  maxRange?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 shot_id = 19;
   */
  shotId?: number;

  /**
   * @generated from field: optional bool predict_hits_against_units = 20 [default = true];
   */
  predictHitsAgainstUnits?: boolean;
};

/**
 * Describes the message CMsgFireBullets.
 * Use `create(CMsgFireBulletsSchema)` to create a new message.
 */
export const CMsgFireBulletsSchema: GenMessage<CMsgFireBullets, {jsonType: CMsgFireBulletsJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 0);

/**
 * @generated from message CMsgFireBullets.TracerAssignment
 */
export type CMsgFireBullets_TracerAssignment = Message<"CMsgFireBullets.TracerAssignment"> & {
  /**
   * @generated from field: optional uint64 tracer_resource_id = 1;
   */
  tracerResourceId: bigint;

  /**
   * @generated from field: optional uint32 bullet_indicies = 2;
   */
  bulletIndicies: number;
};

/**
 * @generated from message CMsgFireBullets.TracerAssignment
 */
export type CMsgFireBullets_TracerAssignmentJson = {
  /**
   * @generated from field: optional uint64 tracer_resource_id = 1;
   */
  tracerResourceId?: string;

  /**
   * @generated from field: optional uint32 bullet_indicies = 2;
   */
  bulletIndicies?: number;
};

/**
 * Describes the message CMsgFireBullets.TracerAssignment.
 * Use `create(CMsgFireBullets_TracerAssignmentSchema)` to create a new message.
 */
export const CMsgFireBullets_TracerAssignmentSchema: GenMessage<CMsgFireBullets_TracerAssignment, {jsonType: CMsgFireBullets_TracerAssignmentJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 0, 0);

/**
 * @generated from message CMsgBulletImpact
 */
export type CMsgBulletImpact = Message<"CMsgBulletImpact"> & {
  /**
   * @generated from field: optional CMsgVector trace_start = 1;
   */
  traceStart?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector impact_origin = 2;
   */
  impactOrigin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector surface_normal = 3;
   */
  surfaceNormal?: CMsgVector;

  /**
   * @generated from field: optional uint32 damage = 4;
   */
  damage: number;

  /**
   * @generated from field: optional uint32 surface_type = 5;
   */
  surfaceType: number;

  /**
   * @generated from field: optional int32 ability_entindex = 7 [default = -1];
   */
  abilityEntindex: number;

  /**
   * @generated from field: optional int32 impacted_entindex = 8 [default = -1];
   */
  impactedEntindex: number;

  /**
   * @generated from field: optional uint32 impacted_hitbox = 9;
   */
  impactedHitbox: number;

  /**
   * @generated from field: optional uint32 weapon_subclass_id = 10;
   */
  weaponSubclassId: number;

  /**
   * @generated from field: optional int32 shooter_entindex = 11 [default = -1];
   */
  shooterEntindex: number;
};

/**
 * @generated from message CMsgBulletImpact
 */
export type CMsgBulletImpactJson = {
  /**
   * @generated from field: optional CMsgVector trace_start = 1;
   */
  traceStart?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector impact_origin = 2;
   */
  impactOrigin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector surface_normal = 3;
   */
  surfaceNormal?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 damage = 4;
   */
  damage?: number;

  /**
   * @generated from field: optional uint32 surface_type = 5;
   */
  surfaceType?: number;

  /**
   * @generated from field: optional int32 ability_entindex = 7 [default = -1];
   */
  abilityEntindex?: number;

  /**
   * @generated from field: optional int32 impacted_entindex = 8 [default = -1];
   */
  impactedEntindex?: number;

  /**
   * @generated from field: optional uint32 impacted_hitbox = 9;
   */
  impactedHitbox?: number;

  /**
   * @generated from field: optional uint32 weapon_subclass_id = 10;
   */
  weaponSubclassId?: number;

  /**
   * @generated from field: optional int32 shooter_entindex = 11 [default = -1];
   */
  shooterEntindex?: number;
};

/**
 * Describes the message CMsgBulletImpact.
 * Use `create(CMsgBulletImpactSchema)` to create a new message.
 */
export const CMsgBulletImpactSchema: GenMessage<CMsgBulletImpact, {jsonType: CMsgBulletImpactJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 1);

/**
 * @generated from message CMsgPlayerAnimEvent
 */
export type CMsgPlayerAnimEvent = Message<"CMsgPlayerAnimEvent"> & {
  /**
   * @generated from field: optional fixed32 player = 1 [default = 16777215];
   */
  player: number;

  /**
   * @generated from field: optional uint32 event = 2;
   */
  event: number;

  /**
   * @generated from field: optional int32 data = 3;
   */
  data: number;
};

/**
 * @generated from message CMsgPlayerAnimEvent
 */
export type CMsgPlayerAnimEventJson = {
  /**
   * @generated from field: optional fixed32 player = 1 [default = 16777215];
   */
  player?: number;

  /**
   * @generated from field: optional uint32 event = 2;
   */
  event?: number;

  /**
   * @generated from field: optional int32 data = 3;
   */
  data?: number;
};

/**
 * Describes the message CMsgPlayerAnimEvent.
 * Use `create(CMsgPlayerAnimEventSchema)` to create a new message.
 */
export const CMsgPlayerAnimEventSchema: GenMessage<CMsgPlayerAnimEvent, {jsonType: CMsgPlayerAnimEventJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 2);

/**
 * @generated from message CMsgParticleSystemManager
 */
export type CMsgParticleSystemManager = Message<"CMsgParticleSystemManager"> & {
  /**
   * @generated from field: required PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
   */
  type: PARTICLE_SYSTEM_MANAGER_MESSAGE;

  /**
   * @generated from field: required uint32 index = 2;
   */
  index: number;

  /**
   * @generated from field: optional CMsgParticleSystemManager.CreateParticle create_particle = 3;
   */
  createParticle?: CMsgParticleSystemManager_CreateParticle;

  /**
   * @generated from field: optional CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
   */
  destroyParticle?: CMsgParticleSystemManager_DestroyParticle;

  /**
   * @generated from field: optional CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
   */
  destroyParticleInvolving?: CMsgParticleSystemManager_DestroyParticleInvolving;

  /**
   * @generated from field: optional CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
   */
  releaseParticleIndex?: CMsgParticleSystemManager_ReleaseParticleIndex;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticle update_particle = 7;
   */
  updateParticle?: CMsgParticleSystemManager_UpdateParticle;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
   */
  updateParticleFwd?: CMsgParticleSystemManager_UpdateParticleFwd;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
   */
  updateParticleOrient?: CMsgParticleSystemManager_UpdateParticleOrient;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
   */
  updateParticleFallback?: CMsgParticleSystemManager_UpdateParticleFallback;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
   */
  updateParticleOffset?: CMsgParticleSystemManager_UpdateParticleOffset;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
   */
  updateParticleEnt?: CMsgParticleSystemManager_UpdateParticleEnt;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
   */
  updateParticleFrozen?: CMsgParticleSystemManager_UpdateParticleFrozen;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
   */
  updateParticleShouldDraw?: CMsgParticleSystemManager_UpdateParticleShouldDraw;
};

/**
 * @generated from message CMsgParticleSystemManager
 */
export type CMsgParticleSystemManagerJson = {
  /**
   * @generated from field: required PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
   */
  type?: PARTICLE_SYSTEM_MANAGER_MESSAGEJson;

  /**
   * @generated from field: required uint32 index = 2;
   */
  index?: number;

  /**
   * @generated from field: optional CMsgParticleSystemManager.CreateParticle create_particle = 3;
   */
  createParticle?: CMsgParticleSystemManager_CreateParticleJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
   */
  destroyParticle?: CMsgParticleSystemManager_DestroyParticleJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
   */
  destroyParticleInvolving?: CMsgParticleSystemManager_DestroyParticleInvolvingJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
   */
  releaseParticleIndex?: CMsgParticleSystemManager_ReleaseParticleIndexJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticle update_particle = 7;
   */
  updateParticle?: CMsgParticleSystemManager_UpdateParticleJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
   */
  updateParticleFwd?: CMsgParticleSystemManager_UpdateParticleFwdJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
   */
  updateParticleOrient?: CMsgParticleSystemManager_UpdateParticleOrientJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
   */
  updateParticleFallback?: CMsgParticleSystemManager_UpdateParticleFallbackJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
   */
  updateParticleOffset?: CMsgParticleSystemManager_UpdateParticleOffsetJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
   */
  updateParticleEnt?: CMsgParticleSystemManager_UpdateParticleEntJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
   */
  updateParticleFrozen?: CMsgParticleSystemManager_UpdateParticleFrozenJson;

  /**
   * @generated from field: optional CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
   */
  updateParticleShouldDraw?: CMsgParticleSystemManager_UpdateParticleShouldDrawJson;
};

/**
 * Describes the message CMsgParticleSystemManager.
 * Use `create(CMsgParticleSystemManagerSchema)` to create a new message.
 */
export const CMsgParticleSystemManagerSchema: GenMessage<CMsgParticleSystemManager, {jsonType: CMsgParticleSystemManagerJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3);

/**
 * @generated from message CMsgParticleSystemManager.CreateParticle
 */
export type CMsgParticleSystemManager_CreateParticle = Message<"CMsgParticleSystemManager.CreateParticle"> & {
  /**
   * @generated from field: optional fixed64 particle_name_index = 1;
   */
  particleNameIndex: bigint;

  /**
   * @generated from field: optional int32 attach_type = 2;
   */
  attachType: number;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle: number;

  /**
   * @generated from field: optional CMsgVector position = 4;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 5;
   */
  angles?: CMsgQAngle;
};

/**
 * @generated from message CMsgParticleSystemManager.CreateParticle
 */
export type CMsgParticleSystemManager_CreateParticleJson = {
  /**
   * @generated from field: optional fixed64 particle_name_index = 1;
   */
  particleNameIndex?: string;

  /**
   * @generated from field: optional int32 attach_type = 2;
   */
  attachType?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional CMsgVector position = 4;
   */
  position?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 5;
   */
  angles?: CMsgQAngleJson;
};

/**
 * Describes the message CMsgParticleSystemManager.CreateParticle.
 * Use `create(CMsgParticleSystemManager_CreateParticleSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_CreateParticleSchema: GenMessage<CMsgParticleSystemManager_CreateParticle, {jsonType: CMsgParticleSystemManager_CreateParticleJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 0);

/**
 * @generated from message CMsgParticleSystemManager.DestroyParticle
 */
export type CMsgParticleSystemManager_DestroyParticle = Message<"CMsgParticleSystemManager.DestroyParticle"> & {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately: boolean;
};

/**
 * @generated from message CMsgParticleSystemManager.DestroyParticle
 */
export type CMsgParticleSystemManager_DestroyParticleJson = {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately?: boolean;
};

/**
 * Describes the message CMsgParticleSystemManager.DestroyParticle.
 * Use `create(CMsgParticleSystemManager_DestroyParticleSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_DestroyParticleSchema: GenMessage<CMsgParticleSystemManager_DestroyParticle, {jsonType: CMsgParticleSystemManager_DestroyParticleJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 1);

/**
 * @generated from message CMsgParticleSystemManager.DestroyParticleInvolving
 */
export type CMsgParticleSystemManager_DestroyParticleInvolving = Message<"CMsgParticleSystemManager.DestroyParticleInvolving"> & {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately: boolean;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle: number;
};

/**
 * @generated from message CMsgParticleSystemManager.DestroyParticleInvolving
 */
export type CMsgParticleSystemManager_DestroyParticleInvolvingJson = {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately?: boolean;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle?: number;
};

/**
 * Describes the message CMsgParticleSystemManager.DestroyParticleInvolving.
 * Use `create(CMsgParticleSystemManager_DestroyParticleInvolvingSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_DestroyParticleInvolvingSchema: GenMessage<CMsgParticleSystemManager_DestroyParticleInvolving, {jsonType: CMsgParticleSystemManager_DestroyParticleInvolvingJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 2);

/**
 * @generated from message CMsgParticleSystemManager.ReleaseParticleIndex
 */
export type CMsgParticleSystemManager_ReleaseParticleIndex = Message<"CMsgParticleSystemManager.ReleaseParticleIndex"> & {
};

/**
 * @generated from message CMsgParticleSystemManager.ReleaseParticleIndex
 */
export type CMsgParticleSystemManager_ReleaseParticleIndexJson = {
};

/**
 * Describes the message CMsgParticleSystemManager.ReleaseParticleIndex.
 * Use `create(CMsgParticleSystemManager_ReleaseParticleIndexSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_ReleaseParticleIndexSchema: GenMessage<CMsgParticleSystemManager_ReleaseParticleIndex, {jsonType: CMsgParticleSystemManager_ReleaseParticleIndexJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 3);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticle
 */
export type CMsgParticleSystemManager_UpdateParticle = Message<"CMsgParticleSystemManager.UpdateParticle"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticle
 */
export type CMsgParticleSystemManager_UpdateParticleJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticle.
 * Use `create(CMsgParticleSystemManager_UpdateParticleSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleSchema: GenMessage<CMsgParticleSystemManager_UpdateParticle, {jsonType: CMsgParticleSystemManager_UpdateParticleJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 4);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFwd
 */
export type CMsgParticleSystemManager_UpdateParticleFwd = Message<"CMsgParticleSystemManager.UpdateParticleFwd"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFwd
 */
export type CMsgParticleSystemManager_UpdateParticleFwdJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleFwd.
 * Use `create(CMsgParticleSystemManager_UpdateParticleFwdSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleFwdSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleFwd, {jsonType: CMsgParticleSystemManager_UpdateParticleFwdJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 5);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleOrient
 */
export type CMsgParticleSystemManager_UpdateParticleOrient = Message<"CMsgParticleSystemManager.UpdateParticleOrient"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector left = 3;
   */
  left?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector up = 4;
   */
  up?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleOrient
 */
export type CMsgParticleSystemManager_UpdateParticleOrientJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector left = 3;
   */
  left?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector up = 4;
   */
  up?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleOrient.
 * Use `create(CMsgParticleSystemManager_UpdateParticleOrientSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleOrientSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleOrient, {jsonType: CMsgParticleSystemManager_UpdateParticleOrientJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 6);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFallback
 */
export type CMsgParticleSystemManager_UpdateParticleFallback = Message<"CMsgParticleSystemManager.UpdateParticleFallback"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFallback
 */
export type CMsgParticleSystemManager_UpdateParticleFallbackJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleFallback.
 * Use `create(CMsgParticleSystemManager_UpdateParticleFallbackSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleFallbackSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleFallback, {jsonType: CMsgParticleSystemManager_UpdateParticleFallbackJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 7);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleEnt
 */
export type CMsgParticleSystemManager_UpdateParticleEnt = Message<"CMsgParticleSystemManager.UpdateParticleEnt"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional uint32 entity_handle = 2 [default = 16777215];
   */
  entityHandle: number;

  /**
   * @generated from field: optional int32 attach_type = 3;
   */
  attachType: number;

  /**
   * @generated from field: optional int32 attachment = 4;
   */
  attachment: number;

  /**
   * @generated from field: optional CMsgVector fallback_position = 5;
   */
  fallbackPosition?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleEnt
 */
export type CMsgParticleSystemManager_UpdateParticleEntJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 2 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional int32 attach_type = 3;
   */
  attachType?: number;

  /**
   * @generated from field: optional int32 attachment = 4;
   */
  attachment?: number;

  /**
   * @generated from field: optional CMsgVector fallback_position = 5;
   */
  fallbackPosition?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleEnt.
 * Use `create(CMsgParticleSystemManager_UpdateParticleEntSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleEntSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleEnt, {jsonType: CMsgParticleSystemManager_UpdateParticleEntJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 8);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleOffset
 */
export type CMsgParticleSystemManager_UpdateParticleOffset = Message<"CMsgParticleSystemManager.UpdateParticleOffset"> & {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint: number;

  /**
   * @generated from field: optional CMsgVector origin_offset = 2;
   */
  originOffset?: CMsgVector;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleOffset
 */
export type CMsgParticleSystemManager_UpdateParticleOffsetJson = {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector origin_offset = 2;
   */
  originOffset?: CMsgVectorJson;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleOffset.
 * Use `create(CMsgParticleSystemManager_UpdateParticleOffsetSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleOffsetSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleOffset, {jsonType: CMsgParticleSystemManager_UpdateParticleOffsetJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 9);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFrozen
 */
export type CMsgParticleSystemManager_UpdateParticleFrozen = Message<"CMsgParticleSystemManager.UpdateParticleFrozen"> & {
  /**
   * @generated from field: optional bool set_frozen = 1;
   */
  setFrozen: boolean;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleFrozen
 */
export type CMsgParticleSystemManager_UpdateParticleFrozenJson = {
  /**
   * @generated from field: optional bool set_frozen = 1;
   */
  setFrozen?: boolean;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleFrozen.
 * Use `create(CMsgParticleSystemManager_UpdateParticleFrozenSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleFrozenSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleFrozen, {jsonType: CMsgParticleSystemManager_UpdateParticleFrozenJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 10);

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleShouldDraw
 */
export type CMsgParticleSystemManager_UpdateParticleShouldDraw = Message<"CMsgParticleSystemManager.UpdateParticleShouldDraw"> & {
  /**
   * @generated from field: optional bool should_draw = 1;
   */
  shouldDraw: boolean;
};

/**
 * @generated from message CMsgParticleSystemManager.UpdateParticleShouldDraw
 */
export type CMsgParticleSystemManager_UpdateParticleShouldDrawJson = {
  /**
   * @generated from field: optional bool should_draw = 1;
   */
  shouldDraw?: boolean;
};

/**
 * Describes the message CMsgParticleSystemManager.UpdateParticleShouldDraw.
 * Use `create(CMsgParticleSystemManager_UpdateParticleShouldDrawSchema)` to create a new message.
 */
export const CMsgParticleSystemManager_UpdateParticleShouldDrawSchema: GenMessage<CMsgParticleSystemManager_UpdateParticleShouldDraw, {jsonType: CMsgParticleSystemManager_UpdateParticleShouldDrawJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 3, 11);

/**
 * @generated from message CMsgScreenTextPretty
 */
export type CMsgScreenTextPretty = Message<"CMsgScreenTextPretty"> & {
  /**
   * @generated from field: optional float x_pos = 1;
   */
  xPos: number;

  /**
   * @generated from field: optional float y_pos = 2;
   */
  yPos: number;

  /**
   * @generated from field: optional int32 line = 3;
   */
  line: number;

  /**
   * @generated from field: optional string text = 4;
   */
  text: string;

  /**
   * @generated from field: optional int32 r = 5;
   */
  r: number;

  /**
   * @generated from field: optional int32 g = 6;
   */
  g: number;

  /**
   * @generated from field: optional int32 b = 7;
   */
  b: number;

  /**
   * @generated from field: optional int32 a = 8;
   */
  a: number;

  /**
   * @generated from field: optional float duration = 9;
   */
  duration: number;

  /**
   * @generated from field: optional string font_name = 10;
   */
  fontName: string;

  /**
   * @generated from field: optional int32 font_size = 11;
   */
  fontSize: number;

  /**
   * @generated from field: optional bool bold_font = 12;
   */
  boldFont: boolean;
};

/**
 * @generated from message CMsgScreenTextPretty
 */
export type CMsgScreenTextPrettyJson = {
  /**
   * @generated from field: optional float x_pos = 1;
   */
  xPos?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float y_pos = 2;
   */
  yPos?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional int32 line = 3;
   */
  line?: number;

  /**
   * @generated from field: optional string text = 4;
   */
  text?: string;

  /**
   * @generated from field: optional int32 r = 5;
   */
  r?: number;

  /**
   * @generated from field: optional int32 g = 6;
   */
  g?: number;

  /**
   * @generated from field: optional int32 b = 7;
   */
  b?: number;

  /**
   * @generated from field: optional int32 a = 8;
   */
  a?: number;

  /**
   * @generated from field: optional float duration = 9;
   */
  duration?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional string font_name = 10;
   */
  fontName?: string;

  /**
   * @generated from field: optional int32 font_size = 11;
   */
  fontSize?: number;

  /**
   * @generated from field: optional bool bold_font = 12;
   */
  boldFont?: boolean;
};

/**
 * Describes the message CMsgScreenTextPretty.
 * Use `create(CMsgScreenTextPrettySchema)` to create a new message.
 */
export const CMsgScreenTextPrettySchema: GenMessage<CMsgScreenTextPretty, {jsonType: CMsgScreenTextPrettyJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 4);

/**
 * @generated from message CMsgServerRequestedTracer
 */
export type CMsgServerRequestedTracer = Message<"CMsgServerRequestedTracer"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector end = 2;
   */
  end?: CMsgVector;

  /**
   * @generated from field: optional int32 weaponid = 3 [default = -1];
   */
  weaponid: number;

  /**
   * @generated from field: optional uint32 entity_handle = 4 [default = 16777215];
   */
  entityHandle: number;

  /**
   * @generated from field: optional float dps = 5;
   */
  dps: number;
};

/**
 * @generated from message CMsgServerRequestedTracer
 */
export type CMsgServerRequestedTracerJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector end = 2;
   */
  end?: CMsgVectorJson;

  /**
   * @generated from field: optional int32 weaponid = 3 [default = -1];
   */
  weaponid?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 4 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional float dps = 5;
   */
  dps?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgServerRequestedTracer.
 * Use `create(CMsgServerRequestedTracerSchema)` to create a new message.
 */
export const CMsgServerRequestedTracerSchema: GenMessage<CMsgServerRequestedTracer, {jsonType: CMsgServerRequestedTracerJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 5);

/**
 * @generated from message CMsgEnableSatVolumesEvent
 */
export type CMsgEnableSatVolumesEvent = Message<"CMsgEnableSatVolumesEvent"> & {
  /**
   * @generated from field: optional uint32 mode = 1;
   */
  mode: number;

  /**
   * @generated from field: optional float desat_amount = 2;
   */
  desatAmount: number;

  /**
   * @generated from field: optional fixed32 sat_tint = 3;
   */
  satTint: number;

  /**
   * @generated from field: optional fixed32 desat_tint = 4;
   */
  desatTint: number;

  /**
   * @generated from field: optional fixed32 outline_color = 5;
   */
  outlineColor: number;
};

/**
 * @generated from message CMsgEnableSatVolumesEvent
 */
export type CMsgEnableSatVolumesEventJson = {
  /**
   * @generated from field: optional uint32 mode = 1;
   */
  mode?: number;

  /**
   * @generated from field: optional float desat_amount = 2;
   */
  desatAmount?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional fixed32 sat_tint = 3;
   */
  satTint?: number;

  /**
   * @generated from field: optional fixed32 desat_tint = 4;
   */
  desatTint?: number;

  /**
   * @generated from field: optional fixed32 outline_color = 5;
   */
  outlineColor?: number;
};

/**
 * Describes the message CMsgEnableSatVolumesEvent.
 * Use `create(CMsgEnableSatVolumesEventSchema)` to create a new message.
 */
export const CMsgEnableSatVolumesEventSchema: GenMessage<CMsgEnableSatVolumesEvent, {jsonType: CMsgEnableSatVolumesEventJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 6);

/**
 * @generated from message CMsgPlaceSatVolumeEvent
 */
export type CMsgPlaceSatVolumeEvent = Message<"CMsgPlaceSatVolumeEvent"> & {
  /**
   * @generated from field: optional CMsgVector position = 1;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector direction = 2;
   */
  direction?: CMsgVector;

  /**
   * @generated from field: optional float radius = 3;
   */
  radius: number;

  /**
   * @generated from field: optional float falloff_distance = 4;
   */
  falloffDistance: number;

  /**
   * @generated from field: optional float theta_dot = 5;
   */
  thetaDot: number;

  /**
   * @generated from field: optional float phi_dot = 6;
   */
  phiDot: number;

  /**
   * @generated from field: optional uint32 entity_handle = 7 [default = 16777215];
   */
  entityHandle: number;

  /**
   * @generated from field: optional uint32 attachment_handle = 8;
   */
  attachmentHandle: number;

  /**
   * @generated from field: optional uint32 type = 9;
   */
  type: number;

  /**
   * @generated from field: optional int32 volume_id = 10;
   */
  volumeId: number;
};

/**
 * @generated from message CMsgPlaceSatVolumeEvent
 */
export type CMsgPlaceSatVolumeEventJson = {
  /**
   * @generated from field: optional CMsgVector position = 1;
   */
  position?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector direction = 2;
   */
  direction?: CMsgVectorJson;

  /**
   * @generated from field: optional float radius = 3;
   */
  radius?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float falloff_distance = 4;
   */
  falloffDistance?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float theta_dot = 5;
   */
  thetaDot?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float phi_dot = 6;
   */
  phiDot?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 entity_handle = 7 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional uint32 attachment_handle = 8;
   */
  attachmentHandle?: number;

  /**
   * @generated from field: optional uint32 type = 9;
   */
  type?: number;

  /**
   * @generated from field: optional int32 volume_id = 10;
   */
  volumeId?: number;
};

/**
 * Describes the message CMsgPlaceSatVolumeEvent.
 * Use `create(CMsgPlaceSatVolumeEventSchema)` to create a new message.
 */
export const CMsgPlaceSatVolumeEventSchema: GenMessage<CMsgPlaceSatVolumeEvent, {jsonType: CMsgPlaceSatVolumeEventJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 7);

/**
 * @generated from message CMsgRemoveSatVolumeEvent
 */
export type CMsgRemoveSatVolumeEvent = Message<"CMsgRemoveSatVolumeEvent"> & {
  /**
   * @generated from field: optional int32 volume_id = 1;
   */
  volumeId: number;
};

/**
 * @generated from message CMsgRemoveSatVolumeEvent
 */
export type CMsgRemoveSatVolumeEventJson = {
  /**
   * @generated from field: optional int32 volume_id = 1;
   */
  volumeId?: number;
};

/**
 * Describes the message CMsgRemoveSatVolumeEvent.
 * Use `create(CMsgRemoveSatVolumeEventSchema)` to create a new message.
 */
export const CMsgRemoveSatVolumeEventSchema: GenMessage<CMsgRemoveSatVolumeEvent, {jsonType: CMsgRemoveSatVolumeEventJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 8);

/**
 * @generated from message CMsgDisableSatVolumesEvent
 */
export type CMsgDisableSatVolumesEvent = Message<"CMsgDisableSatVolumesEvent"> & {
};

/**
 * @generated from message CMsgDisableSatVolumesEvent
 */
export type CMsgDisableSatVolumesEventJson = {
};

/**
 * Describes the message CMsgDisableSatVolumesEvent.
 * Use `create(CMsgDisableSatVolumesEventSchema)` to create a new message.
 */
export const CMsgDisableSatVolumesEventSchema: GenMessage<CMsgDisableSatVolumesEvent, {jsonType: CMsgDisableSatVolumesEventJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 9);

/**
 * @generated from message CMsgRemoveBullet
 */
export type CMsgRemoveBullet = Message<"CMsgRemoveBullet"> & {
  /**
   * @generated from field: optional int32 shooter_entindex = 1 [default = -1];
   */
  shooterEntindex: number;

  /**
   * @generated from field: optional uint32 shot_id = 2;
   */
  shotId: number;

  /**
   * @generated from field: optional uint32 bullet_index = 3;
   */
  bulletIndex: number;
};

/**
 * @generated from message CMsgRemoveBullet
 */
export type CMsgRemoveBulletJson = {
  /**
   * @generated from field: optional int32 shooter_entindex = 1 [default = -1];
   */
  shooterEntindex?: number;

  /**
   * @generated from field: optional uint32 shot_id = 2;
   */
  shotId?: number;

  /**
   * @generated from field: optional uint32 bullet_index = 3;
   */
  bulletIndex?: number;
};

/**
 * Describes the message CMsgRemoveBullet.
 * Use `create(CMsgRemoveBulletSchema)` to create a new message.
 */
export const CMsgRemoveBulletSchema: GenMessage<CMsgRemoveBullet, {jsonType: CMsgRemoveBulletJson}> = /*@__PURE__*/
  messageDesc(file_citadel_gameevents, 10);

/**
 * @generated from enum ECitadelGameEvents
 */
export enum ECitadelGameEvents {
  /**
   * @generated from enum value: GE_FireBullets = 450;
   */
  GE_FireBullets = 450,

  /**
   * @generated from enum value: GE_PlayerAnimEvent = 451;
   */
  GE_PlayerAnimEvent = 451,

  /**
   * @generated from enum value: GE_ParticleSystemManager = 458;
   */
  GE_ParticleSystemManager = 458,

  /**
   * @generated from enum value: GE_ScreenTextPretty = 459;
   */
  GE_ScreenTextPretty = 459,

  /**
   * @generated from enum value: GE_BulletImpact = 461;
   */
  GE_BulletImpact = 461,

  /**
   * @generated from enum value: GE_EnableSatVolumesEvent = 462;
   */
  GE_EnableSatVolumesEvent = 462,

  /**
   * @generated from enum value: GE_PlaceSatVolumeEvent = 463;
   */
  GE_PlaceSatVolumeEvent = 463,

  /**
   * @generated from enum value: GE_DisableSatVolumesEvent = 464;
   */
  GE_DisableSatVolumesEvent = 464,

  /**
   * @generated from enum value: GE_RemoveSatVolumeEvent = 465;
   */
  GE_RemoveSatVolumeEvent = 465,

  /**
   * @generated from enum value: GE_RemoveBullet = 466;
   */
  GE_RemoveBullet = 466,
}

/**
 * @generated from enum ECitadelGameEvents
 */
export type ECitadelGameEventsJson = "GE_FireBullets" | "GE_PlayerAnimEvent" | "GE_ParticleSystemManager" | "GE_ScreenTextPretty" | "GE_BulletImpact" | "GE_EnableSatVolumesEvent" | "GE_PlaceSatVolumeEvent" | "GE_DisableSatVolumesEvent" | "GE_RemoveSatVolumeEvent" | "GE_RemoveBullet";

/**
 * Describes the enum ECitadelGameEvents.
 */
export const ECitadelGameEventsSchema: GenEnum<ECitadelGameEvents, ECitadelGameEventsJson> = /*@__PURE__*/
  enumDesc(file_citadel_gameevents, 0);

/**
 * @generated from enum PARTICLE_SYSTEM_MANAGER_MESSAGE
 */
export enum PARTICLE_SYSTEM_MANAGER_MESSAGE {
  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_CREATE = 0;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_CREATE = 0,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY = 1;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY = 1,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING = 2;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING = 2,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE = 3;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE = 3,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE = 4;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE = 4,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD = 5;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD = 5,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION = 6;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION = 6,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK = 7;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK = 7,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT = 8;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT = 8,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET = 9;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET = 9,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN = 10;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN = 10,

  /**
   * @generated from enum value: PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW = 11;
   */
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW = 11,
}

/**
 * @generated from enum PARTICLE_SYSTEM_MANAGER_MESSAGE
 */
export type PARTICLE_SYSTEM_MANAGER_MESSAGEJson = "PARTICLE_SYSTEM_MANAGER_EVENT_CREATE" | "PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY" | "PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING" | "PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN" | "PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW";

/**
 * Describes the enum PARTICLE_SYSTEM_MANAGER_MESSAGE.
 */
export const PARTICLE_SYSTEM_MANAGER_MESSAGESchema: GenEnum<PARTICLE_SYSTEM_MANAGER_MESSAGE, PARTICLE_SYSTEM_MANAGER_MESSAGEJson> = /*@__PURE__*/
  enumDesc(file_citadel_gameevents, 1);

