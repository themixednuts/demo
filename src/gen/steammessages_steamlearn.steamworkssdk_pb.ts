// @generated by protoc-gen-es v2.6.0 with parameter "target=ts,json_types=true"
// @generated from file steammessages_steamlearn.steamworkssdk.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_unified_base_steamworkssdk } from "./steammessages_unified_base.steamworkssdk_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_steamlearn.steamworkssdk.proto.
 */
export const file_steammessages_steamlearn_steamworkssdk: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_unified_base_steamworkssdk]);

/**
 * @generated from message CMsgSteamLearnDataSourceDescObject
 */
export type CMsgSteamLearnDataSourceDescObject = Message<"CMsgSteamLearnDataSourceDescObject"> & {
  /**
   * @generated from field: repeated CMsgSteamLearnDataSourceDescElement elements = 1;
   */
  elements: CMsgSteamLearnDataSourceDescElement[];
};

/**
 * @generated from message CMsgSteamLearnDataSourceDescObject
 */
export type CMsgSteamLearnDataSourceDescObjectJson = {
  /**
   * @generated from field: repeated CMsgSteamLearnDataSourceDescElement elements = 1;
   */
  elements?: CMsgSteamLearnDataSourceDescElementJson[];
};

/**
 * Describes the message CMsgSteamLearnDataSourceDescObject.
 * Use `create(CMsgSteamLearnDataSourceDescObjectSchema)` to create a new message.
 */
export const CMsgSteamLearnDataSourceDescObjectSchema: GenMessage<CMsgSteamLearnDataSourceDescObject, {jsonType: CMsgSteamLearnDataSourceDescObjectJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 0);

/**
 * @generated from message CMsgSteamLearnDataSourceDescElement
 */
export type CMsgSteamLearnDataSourceDescElement = Message<"CMsgSteamLearnDataSourceDescElement"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];
   */
  dataType: ESteamLearnDataType;

  /**
   * @generated from field: optional CMsgSteamLearnDataSourceDescObject object = 3;
   */
  object?: CMsgSteamLearnDataSourceDescObject;

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count: number;
};

/**
 * @generated from message CMsgSteamLearnDataSourceDescElement
 */
export type CMsgSteamLearnDataSourceDescElementJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];
   */
  dataType?: ESteamLearnDataTypeJson;

  /**
   * @generated from field: optional CMsgSteamLearnDataSourceDescObject object = 3;
   */
  object?: CMsgSteamLearnDataSourceDescObjectJson;

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count?: number;
};

/**
 * Describes the message CMsgSteamLearnDataSourceDescElement.
 * Use `create(CMsgSteamLearnDataSourceDescElementSchema)` to create a new message.
 */
export const CMsgSteamLearnDataSourceDescElementSchema: GenMessage<CMsgSteamLearnDataSourceDescElement, {jsonType: CMsgSteamLearnDataSourceDescElementJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 1);

/**
 * @generated from message CMsgSteamLearnDataSource
 */
export type CMsgSteamLearnDataSource = Message<"CMsgSteamLearnDataSource"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional uint32 version = 3;
   */
  version: number;

  /**
   * @generated from field: optional string source_description = 4;
   */
  sourceDescription: string;

  /**
   * @generated from field: optional CMsgSteamLearnDataSourceDescObject structure = 5;
   */
  structure?: CMsgSteamLearnDataSourceDescObject;

  /**
   * @generated from field: optional uint32 structure_crc = 6;
   */
  structureCrc: number;

  /**
   * @generated from field: optional uint32 cache_duration_seconds = 7;
   */
  cacheDurationSeconds: number;
};

/**
 * @generated from message CMsgSteamLearnDataSource
 */
export type CMsgSteamLearnDataSourceJson = {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional uint32 version = 3;
   */
  version?: number;

  /**
   * @generated from field: optional string source_description = 4;
   */
  sourceDescription?: string;

  /**
   * @generated from field: optional CMsgSteamLearnDataSourceDescObject structure = 5;
   */
  structure?: CMsgSteamLearnDataSourceDescObjectJson;

  /**
   * @generated from field: optional uint32 structure_crc = 6;
   */
  structureCrc?: number;

  /**
   * @generated from field: optional uint32 cache_duration_seconds = 7;
   */
  cacheDurationSeconds?: number;
};

/**
 * Describes the message CMsgSteamLearnDataSource.
 * Use `create(CMsgSteamLearnDataSourceSchema)` to create a new message.
 */
export const CMsgSteamLearnDataSourceSchema: GenMessage<CMsgSteamLearnDataSource, {jsonType: CMsgSteamLearnDataSourceJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 2);

/**
 * @generated from message CMsgSteamLearnDataObject
 */
export type CMsgSteamLearnDataObject = Message<"CMsgSteamLearnDataObject"> & {
  /**
   * @generated from field: repeated CMsgSteamLearnDataElement elements = 1;
   */
  elements: CMsgSteamLearnDataElement[];
};

/**
 * @generated from message CMsgSteamLearnDataObject
 */
export type CMsgSteamLearnDataObjectJson = {
  /**
   * @generated from field: repeated CMsgSteamLearnDataElement elements = 1;
   */
  elements?: CMsgSteamLearnDataElementJson[];
};

/**
 * Describes the message CMsgSteamLearnDataObject.
 * Use `create(CMsgSteamLearnDataObjectSchema)` to create a new message.
 */
export const CMsgSteamLearnDataObjectSchema: GenMessage<CMsgSteamLearnDataObject, {jsonType: CMsgSteamLearnDataObjectJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 3);

/**
 * @generated from message CMsgSteamLearnDataElement
 */
export type CMsgSteamLearnDataElement = Message<"CMsgSteamLearnDataElement"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated int32 data_int32s = 20;
   */
  dataInt32s: number[];

  /**
   * @generated from field: repeated float data_floats = 21;
   */
  dataFloats: number[];

  /**
   * @generated from field: repeated bool data_bools = 22;
   */
  dataBools: boolean[];

  /**
   * @generated from field: repeated string data_strings = 23;
   */
  dataStrings: string[];

  /**
   * @generated from field: repeated CMsgSteamLearnDataObject data_objects = 24;
   */
  dataObjects: CMsgSteamLearnDataObject[];
};

/**
 * @generated from message CMsgSteamLearnDataElement
 */
export type CMsgSteamLearnDataElementJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated int32 data_int32s = 20;
   */
  dataInt32s?: number[];

  /**
   * @generated from field: repeated float data_floats = 21;
   */
  dataFloats?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated bool data_bools = 22;
   */
  dataBools?: boolean[];

  /**
   * @generated from field: repeated string data_strings = 23;
   */
  dataStrings?: string[];

  /**
   * @generated from field: repeated CMsgSteamLearnDataObject data_objects = 24;
   */
  dataObjects?: CMsgSteamLearnDataObjectJson[];
};

/**
 * Describes the message CMsgSteamLearnDataElement.
 * Use `create(CMsgSteamLearnDataElementSchema)` to create a new message.
 */
export const CMsgSteamLearnDataElementSchema: GenMessage<CMsgSteamLearnDataElement, {jsonType: CMsgSteamLearnDataElementJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 4);

/**
 * @generated from message CMsgSteamLearnData
 */
export type CMsgSteamLearnData = Message<"CMsgSteamLearnData"> & {
  /**
   * @generated from field: optional uint32 data_source_id = 1;
   */
  dataSourceId: number;

  /**
   * @generated from field: repeated uint64 keys = 2;
   */
  keys: bigint[];

  /**
   * @generated from field: optional CMsgSteamLearnDataObject data_object = 3;
   */
  dataObject?: CMsgSteamLearnDataObject;
};

/**
 * @generated from message CMsgSteamLearnData
 */
export type CMsgSteamLearnDataJson = {
  /**
   * @generated from field: optional uint32 data_source_id = 1;
   */
  dataSourceId?: number;

  /**
   * @generated from field: repeated uint64 keys = 2;
   */
  keys?: string[];

  /**
   * @generated from field: optional CMsgSteamLearnDataObject data_object = 3;
   */
  dataObject?: CMsgSteamLearnDataObjectJson;
};

/**
 * Describes the message CMsgSteamLearnData.
 * Use `create(CMsgSteamLearnDataSchema)` to create a new message.
 */
export const CMsgSteamLearnDataSchema: GenMessage<CMsgSteamLearnData, {jsonType: CMsgSteamLearnDataJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 5);

/**
 * @generated from message CMsgSteamLearnDataList
 */
export type CMsgSteamLearnDataList = Message<"CMsgSteamLearnDataList"> & {
  /**
   * @generated from field: repeated CMsgSteamLearnData data = 1;
   */
  data: CMsgSteamLearnData[];
};

/**
 * @generated from message CMsgSteamLearnDataList
 */
export type CMsgSteamLearnDataListJson = {
  /**
   * @generated from field: repeated CMsgSteamLearnData data = 1;
   */
  data?: CMsgSteamLearnDataJson[];
};

/**
 * Describes the message CMsgSteamLearnDataList.
 * Use `create(CMsgSteamLearnDataListSchema)` to create a new message.
 */
export const CMsgSteamLearnDataListSchema: GenMessage<CMsgSteamLearnDataList, {jsonType: CMsgSteamLearnDataListJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 6);

/**
 * @generated from message CMsgSteamLearn_RegisterDataSource_Request
 */
export type CMsgSteamLearn_RegisterDataSource_Request = Message<"CMsgSteamLearn_RegisterDataSource_Request"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional CMsgSteamLearnDataSource data_source = 3;
   */
  dataSource?: CMsgSteamLearnDataSource;
};

/**
 * @generated from message CMsgSteamLearn_RegisterDataSource_Request
 */
export type CMsgSteamLearn_RegisterDataSource_RequestJson = {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional CMsgSteamLearnDataSource data_source = 3;
   */
  dataSource?: CMsgSteamLearnDataSourceJson;
};

/**
 * Describes the message CMsgSteamLearn_RegisterDataSource_Request.
 * Use `create(CMsgSteamLearn_RegisterDataSource_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_RegisterDataSource_RequestSchema: GenMessage<CMsgSteamLearn_RegisterDataSource_Request, {jsonType: CMsgSteamLearn_RegisterDataSource_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 7);

/**
 * @generated from message CMsgSteamLearn_RegisterDataSource_Response
 */
export type CMsgSteamLearn_RegisterDataSource_Response = Message<"CMsgSteamLearn_RegisterDataSource_Response"> & {
  /**
   * @generated from field: optional ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];
   */
  result: ESteammLearnRegisterDataSourceResult;

  /**
   * @generated from field: optional CMsgSteamLearnDataSource data_source = 2;
   */
  dataSource?: CMsgSteamLearnDataSource;
};

/**
 * @generated from message CMsgSteamLearn_RegisterDataSource_Response
 */
export type CMsgSteamLearn_RegisterDataSource_ResponseJson = {
  /**
   * @generated from field: optional ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];
   */
  result?: ESteammLearnRegisterDataSourceResultJson;

  /**
   * @generated from field: optional CMsgSteamLearnDataSource data_source = 2;
   */
  dataSource?: CMsgSteamLearnDataSourceJson;
};

/**
 * Describes the message CMsgSteamLearn_RegisterDataSource_Response.
 * Use `create(CMsgSteamLearn_RegisterDataSource_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_RegisterDataSource_ResponseSchema: GenMessage<CMsgSteamLearn_RegisterDataSource_Response, {jsonType: CMsgSteamLearn_RegisterDataSource_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 8);

/**
 * @generated from message CMsgSteamLearn_CacheData_Request
 */
export type CMsgSteamLearn_CacheData_Request = Message<"CMsgSteamLearn_CacheData_Request"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional CMsgSteamLearnData data = 3;
   */
  data?: CMsgSteamLearnData;
};

/**
 * @generated from message CMsgSteamLearn_CacheData_Request
 */
export type CMsgSteamLearn_CacheData_RequestJson = {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional CMsgSteamLearnData data = 3;
   */
  data?: CMsgSteamLearnDataJson;
};

/**
 * Describes the message CMsgSteamLearn_CacheData_Request.
 * Use `create(CMsgSteamLearn_CacheData_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_CacheData_RequestSchema: GenMessage<CMsgSteamLearn_CacheData_Request, {jsonType: CMsgSteamLearn_CacheData_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 9);

/**
 * @generated from message CMsgSteamLearn_CacheData_Response
 */
export type CMsgSteamLearn_CacheData_Response = Message<"CMsgSteamLearn_CacheData_Response"> & {
  /**
   * @generated from field: optional ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];
   */
  cacheDataResult: ESteamLearnCacheDataResult;
};

/**
 * @generated from message CMsgSteamLearn_CacheData_Response
 */
export type CMsgSteamLearn_CacheData_ResponseJson = {
  /**
   * @generated from field: optional ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];
   */
  cacheDataResult?: ESteamLearnCacheDataResultJson;
};

/**
 * Describes the message CMsgSteamLearn_CacheData_Response.
 * Use `create(CMsgSteamLearn_CacheData_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_CacheData_ResponseSchema: GenMessage<CMsgSteamLearn_CacheData_Response, {jsonType: CMsgSteamLearn_CacheData_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 10);

/**
 * @generated from message CMsgSteamLearn_SnapshotProject_Request
 */
export type CMsgSteamLearn_SnapshotProject_Request = Message<"CMsgSteamLearn_SnapshotProject_Request"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId: number;

  /**
   * @generated from field: optional uint32 published_version = 7;
   */
  publishedVersion: number;

  /**
   * @generated from field: repeated uint64 keys = 4;
   */
  keys: bigint[];

  /**
   * @generated from field: repeated CMsgSteamLearnData data = 5;
   */
  data: CMsgSteamLearnData[];

  /**
   * @generated from field: optional uint32 pending_data_limit_seconds = 6;
   */
  pendingDataLimitSeconds: number;
};

/**
 * @generated from message CMsgSteamLearn_SnapshotProject_Request
 */
export type CMsgSteamLearn_SnapshotProject_RequestJson = {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId?: number;

  /**
   * @generated from field: optional uint32 published_version = 7;
   */
  publishedVersion?: number;

  /**
   * @generated from field: repeated uint64 keys = 4;
   */
  keys?: string[];

  /**
   * @generated from field: repeated CMsgSteamLearnData data = 5;
   */
  data?: CMsgSteamLearnDataJson[];

  /**
   * @generated from field: optional uint32 pending_data_limit_seconds = 6;
   */
  pendingDataLimitSeconds?: number;
};

/**
 * Describes the message CMsgSteamLearn_SnapshotProject_Request.
 * Use `create(CMsgSteamLearn_SnapshotProject_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_SnapshotProject_RequestSchema: GenMessage<CMsgSteamLearn_SnapshotProject_Request, {jsonType: CMsgSteamLearn_SnapshotProject_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 11);

/**
 * @generated from message CMsgSteamLearn_SnapshotProject_Response
 */
export type CMsgSteamLearn_SnapshotProject_Response = Message<"CMsgSteamLearn_SnapshotProject_Response"> & {
  /**
   * @generated from field: optional ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];
   */
  snapshotResult: ESteamLearnSnapshotProjectResult;
};

/**
 * @generated from message CMsgSteamLearn_SnapshotProject_Response
 */
export type CMsgSteamLearn_SnapshotProject_ResponseJson = {
  /**
   * @generated from field: optional ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];
   */
  snapshotResult?: ESteamLearnSnapshotProjectResultJson;
};

/**
 * Describes the message CMsgSteamLearn_SnapshotProject_Response.
 * Use `create(CMsgSteamLearn_SnapshotProject_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_SnapshotProject_ResponseSchema: GenMessage<CMsgSteamLearn_SnapshotProject_Response, {jsonType: CMsgSteamLearn_SnapshotProject_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 12);

/**
 * @generated from message CMsgSteamLearn_BatchOperation_Request
 */
export type CMsgSteamLearn_BatchOperation_Request = Message<"CMsgSteamLearn_BatchOperation_Request"> & {
  /**
   * @generated from field: repeated CMsgSteamLearn_CacheData_Request cache_data_requests = 1;
   */
  cacheDataRequests: CMsgSteamLearn_CacheData_Request[];

  /**
   * @generated from field: repeated CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;
   */
  snapshotRequests: CMsgSteamLearn_SnapshotProject_Request[];

  /**
   * @generated from field: repeated CMsgSteamLearn_Inference_Request inference_requests = 3;
   */
  inferenceRequests: CMsgSteamLearn_Inference_Request[];
};

/**
 * @generated from message CMsgSteamLearn_BatchOperation_Request
 */
export type CMsgSteamLearn_BatchOperation_RequestJson = {
  /**
   * @generated from field: repeated CMsgSteamLearn_CacheData_Request cache_data_requests = 1;
   */
  cacheDataRequests?: CMsgSteamLearn_CacheData_RequestJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;
   */
  snapshotRequests?: CMsgSteamLearn_SnapshotProject_RequestJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_Inference_Request inference_requests = 3;
   */
  inferenceRequests?: CMsgSteamLearn_Inference_RequestJson[];
};

/**
 * Describes the message CMsgSteamLearn_BatchOperation_Request.
 * Use `create(CMsgSteamLearn_BatchOperation_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_BatchOperation_RequestSchema: GenMessage<CMsgSteamLearn_BatchOperation_Request, {jsonType: CMsgSteamLearn_BatchOperation_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 13);

/**
 * @generated from message CMsgSteamLearn_BatchOperation_Response
 */
export type CMsgSteamLearn_BatchOperation_Response = Message<"CMsgSteamLearn_BatchOperation_Response"> & {
  /**
   * @generated from field: repeated CMsgSteamLearn_CacheData_Response cache_data_responses = 1;
   */
  cacheDataResponses: CMsgSteamLearn_CacheData_Response[];

  /**
   * @generated from field: repeated CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;
   */
  snapshotResponses: CMsgSteamLearn_SnapshotProject_Response[];

  /**
   * @generated from field: repeated CMsgSteamLearn_Inference_Response inference_responses = 3;
   */
  inferenceResponses: CMsgSteamLearn_Inference_Response[];
};

/**
 * @generated from message CMsgSteamLearn_BatchOperation_Response
 */
export type CMsgSteamLearn_BatchOperation_ResponseJson = {
  /**
   * @generated from field: repeated CMsgSteamLearn_CacheData_Response cache_data_responses = 1;
   */
  cacheDataResponses?: CMsgSteamLearn_CacheData_ResponseJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;
   */
  snapshotResponses?: CMsgSteamLearn_SnapshotProject_ResponseJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_Inference_Response inference_responses = 3;
   */
  inferenceResponses?: CMsgSteamLearn_Inference_ResponseJson[];
};

/**
 * Describes the message CMsgSteamLearn_BatchOperation_Response.
 * Use `create(CMsgSteamLearn_BatchOperation_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_BatchOperation_ResponseSchema: GenMessage<CMsgSteamLearn_BatchOperation_Response, {jsonType: CMsgSteamLearn_BatchOperation_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 14);

/**
 * @generated from message CMsgSteamLearnAccessTokens
 */
export type CMsgSteamLearnAccessTokens = Message<"CMsgSteamLearnAccessTokens"> & {
  /**
   * @generated from field: optional string register_data_source_access_token = 1;
   */
  registerDataSourceAccessToken: string;

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;
   */
  cacheDataAccessTokens: CMsgSteamLearnAccessTokens_CacheDataAccessToken[];

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;
   */
  snapshotProjectAccessTokens: CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken[];

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;
   */
  inferenceAccessTokens: CMsgSteamLearnAccessTokens_InferenceAccessToken[];
};

/**
 * @generated from message CMsgSteamLearnAccessTokens
 */
export type CMsgSteamLearnAccessTokensJson = {
  /**
   * @generated from field: optional string register_data_source_access_token = 1;
   */
  registerDataSourceAccessToken?: string;

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;
   */
  cacheDataAccessTokens?: CMsgSteamLearnAccessTokens_CacheDataAccessTokenJson[];

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;
   */
  snapshotProjectAccessTokens?: CMsgSteamLearnAccessTokens_SnapshotProjectAccessTokenJson[];

  /**
   * @generated from field: repeated CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;
   */
  inferenceAccessTokens?: CMsgSteamLearnAccessTokens_InferenceAccessTokenJson[];
};

/**
 * Describes the message CMsgSteamLearnAccessTokens.
 * Use `create(CMsgSteamLearnAccessTokensSchema)` to create a new message.
 */
export const CMsgSteamLearnAccessTokensSchema: GenMessage<CMsgSteamLearnAccessTokens, {jsonType: CMsgSteamLearnAccessTokensJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 15);

/**
 * @generated from message CMsgSteamLearnAccessTokens.CacheDataAccessToken
 */
export type CMsgSteamLearnAccessTokens_CacheDataAccessToken = Message<"CMsgSteamLearnAccessTokens.CacheDataAccessToken"> & {
  /**
   * @generated from field: optional uint32 data_source_id = 1;
   */
  dataSourceId: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken: string;
};

/**
 * @generated from message CMsgSteamLearnAccessTokens.CacheDataAccessToken
 */
export type CMsgSteamLearnAccessTokens_CacheDataAccessTokenJson = {
  /**
   * @generated from field: optional uint32 data_source_id = 1;
   */
  dataSourceId?: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken?: string;
};

/**
 * Describes the message CMsgSteamLearnAccessTokens.CacheDataAccessToken.
 * Use `create(CMsgSteamLearnAccessTokens_CacheDataAccessTokenSchema)` to create a new message.
 */
export const CMsgSteamLearnAccessTokens_CacheDataAccessTokenSchema: GenMessage<CMsgSteamLearnAccessTokens_CacheDataAccessToken, {jsonType: CMsgSteamLearnAccessTokens_CacheDataAccessTokenJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 15, 0);

/**
 * @generated from message CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken
 */
export type CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken = Message<"CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken"> & {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken: string;
};

/**
 * @generated from message CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken
 */
export type CMsgSteamLearnAccessTokens_SnapshotProjectAccessTokenJson = {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId?: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken?: string;
};

/**
 * Describes the message CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.
 * Use `create(CMsgSteamLearnAccessTokens_SnapshotProjectAccessTokenSchema)` to create a new message.
 */
export const CMsgSteamLearnAccessTokens_SnapshotProjectAccessTokenSchema: GenMessage<CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken, {jsonType: CMsgSteamLearnAccessTokens_SnapshotProjectAccessTokenJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 15, 1);

/**
 * @generated from message CMsgSteamLearnAccessTokens.InferenceAccessToken
 */
export type CMsgSteamLearnAccessTokens_InferenceAccessToken = Message<"CMsgSteamLearnAccessTokens.InferenceAccessToken"> & {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken: string;
};

/**
 * @generated from message CMsgSteamLearnAccessTokens.InferenceAccessToken
 */
export type CMsgSteamLearnAccessTokens_InferenceAccessTokenJson = {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId?: number;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken?: string;
};

/**
 * Describes the message CMsgSteamLearnAccessTokens.InferenceAccessToken.
 * Use `create(CMsgSteamLearnAccessTokens_InferenceAccessTokenSchema)` to create a new message.
 */
export const CMsgSteamLearnAccessTokens_InferenceAccessTokenSchema: GenMessage<CMsgSteamLearnAccessTokens_InferenceAccessToken, {jsonType: CMsgSteamLearnAccessTokens_InferenceAccessTokenJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 15, 2);

/**
 * @generated from message CMsgSteamLearn_GetAccessTokens_Request
 */
export type CMsgSteamLearn_GetAccessTokens_Request = Message<"CMsgSteamLearn_GetAccessTokens_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * @generated from message CMsgSteamLearn_GetAccessTokens_Request
 */
export type CMsgSteamLearn_GetAccessTokens_RequestJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;
};

/**
 * Describes the message CMsgSteamLearn_GetAccessTokens_Request.
 * Use `create(CMsgSteamLearn_GetAccessTokens_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_GetAccessTokens_RequestSchema: GenMessage<CMsgSteamLearn_GetAccessTokens_Request, {jsonType: CMsgSteamLearn_GetAccessTokens_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 16);

/**
 * @generated from message CMsgSteamLearn_GetAccessTokens_Response
 */
export type CMsgSteamLearn_GetAccessTokens_Response = Message<"CMsgSteamLearn_GetAccessTokens_Response"> & {
  /**
   * @generated from field: optional ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];
   */
  result: ESteamLearnGetAccessTokensResult;

  /**
   * @generated from field: optional CMsgSteamLearnAccessTokens access_tokens = 2;
   */
  accessTokens?: CMsgSteamLearnAccessTokens;
};

/**
 * @generated from message CMsgSteamLearn_GetAccessTokens_Response
 */
export type CMsgSteamLearn_GetAccessTokens_ResponseJson = {
  /**
   * @generated from field: optional ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];
   */
  result?: ESteamLearnGetAccessTokensResultJson;

  /**
   * @generated from field: optional CMsgSteamLearnAccessTokens access_tokens = 2;
   */
  accessTokens?: CMsgSteamLearnAccessTokensJson;
};

/**
 * Describes the message CMsgSteamLearn_GetAccessTokens_Response.
 * Use `create(CMsgSteamLearn_GetAccessTokens_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_GetAccessTokens_ResponseSchema: GenMessage<CMsgSteamLearn_GetAccessTokens_Response, {jsonType: CMsgSteamLearn_GetAccessTokens_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 17);

/**
 * @generated from message CMsgInferenceIterateBeamSearch
 */
export type CMsgInferenceIterateBeamSearch = Message<"CMsgInferenceIterateBeamSearch"> & {
  /**
   * @generated from field: optional uint32 beam_length = 1;
   */
  beamLength: number;

  /**
   * @generated from field: optional uint32 beam_width = 2;
   */
  beamWidth: number;

  /**
   * @generated from field: optional float item_decay = 3;
   */
  itemDecay: number;

  /**
   * @generated from field: optional uint32 next_item_count = 4;
   */
  nextItemCount: number;

  /**
   * @generated from field: repeated CMsgInferenceIterateBeamSearch.CustomItemScalar item_scalars = 5;
   */
  itemScalars: CMsgInferenceIterateBeamSearch_CustomItemScalar[];
};

/**
 * @generated from message CMsgInferenceIterateBeamSearch
 */
export type CMsgInferenceIterateBeamSearchJson = {
  /**
   * @generated from field: optional uint32 beam_length = 1;
   */
  beamLength?: number;

  /**
   * @generated from field: optional uint32 beam_width = 2;
   */
  beamWidth?: number;

  /**
   * @generated from field: optional float item_decay = 3;
   */
  itemDecay?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 next_item_count = 4;
   */
  nextItemCount?: number;

  /**
   * @generated from field: repeated CMsgInferenceIterateBeamSearch.CustomItemScalar item_scalars = 5;
   */
  itemScalars?: CMsgInferenceIterateBeamSearch_CustomItemScalarJson[];
};

/**
 * Describes the message CMsgInferenceIterateBeamSearch.
 * Use `create(CMsgInferenceIterateBeamSearchSchema)` to create a new message.
 */
export const CMsgInferenceIterateBeamSearchSchema: GenMessage<CMsgInferenceIterateBeamSearch, {jsonType: CMsgInferenceIterateBeamSearchJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 18);

/**
 * @generated from message CMsgInferenceIterateBeamSearch.CustomItemScalar
 */
export type CMsgInferenceIterateBeamSearch_CustomItemScalar = Message<"CMsgInferenceIterateBeamSearch.CustomItemScalar"> & {
  /**
   * @generated from field: optional uint32 item = 1;
   */
  item: number;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale: number;
};

/**
 * @generated from message CMsgInferenceIterateBeamSearch.CustomItemScalar
 */
export type CMsgInferenceIterateBeamSearch_CustomItemScalarJson = {
  /**
   * @generated from field: optional uint32 item = 1;
   */
  item?: number;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgInferenceIterateBeamSearch.CustomItemScalar.
 * Use `create(CMsgInferenceIterateBeamSearch_CustomItemScalarSchema)` to create a new message.
 */
export const CMsgInferenceIterateBeamSearch_CustomItemScalarSchema: GenMessage<CMsgInferenceIterateBeamSearch_CustomItemScalar, {jsonType: CMsgInferenceIterateBeamSearch_CustomItemScalarJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 18, 0);

/**
 * @generated from message CMsgSteamLearn_Inference_Request
 */
export type CMsgSteamLearn_Inference_Request = Message<"CMsgSteamLearn_Inference_Request"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId: number;

  /**
   * @generated from field: optional uint32 published_version = 4;
   */
  publishedVersion: number;

  /**
   * @generated from field: optional uint32 override_train_id = 5;
   */
  overrideTrainId: number;

  /**
   * @generated from field: optional CMsgSteamLearnDataList data = 6;
   */
  data?: CMsgSteamLearnDataList;

  /**
   * @generated from field: repeated float additional_data = 7;
   */
  additionalData: number[];

  /**
   * @generated from field: repeated uint64 keys = 8;
   */
  keys: bigint[];

  /**
   * @generated from field: optional string named_inference = 9;
   */
  namedInference: string;

  /**
   * @generated from field: optional CMsgInferenceIterateBeamSearch iterate_beam_search = 13;
   */
  iterateBeamSearch?: CMsgInferenceIterateBeamSearch;
};

/**
 * @generated from message CMsgSteamLearn_Inference_Request
 */
export type CMsgSteamLearn_Inference_RequestJson = {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId?: number;

  /**
   * @generated from field: optional uint32 published_version = 4;
   */
  publishedVersion?: number;

  /**
   * @generated from field: optional uint32 override_train_id = 5;
   */
  overrideTrainId?: number;

  /**
   * @generated from field: optional CMsgSteamLearnDataList data = 6;
   */
  data?: CMsgSteamLearnDataListJson;

  /**
   * @generated from field: repeated float additional_data = 7;
   */
  additionalData?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated uint64 keys = 8;
   */
  keys?: string[];

  /**
   * @generated from field: optional string named_inference = 9;
   */
  namedInference?: string;

  /**
   * @generated from field: optional CMsgInferenceIterateBeamSearch iterate_beam_search = 13;
   */
  iterateBeamSearch?: CMsgInferenceIterateBeamSearchJson;
};

/**
 * Describes the message CMsgSteamLearn_Inference_Request.
 * Use `create(CMsgSteamLearn_Inference_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_Inference_RequestSchema: GenMessage<CMsgSteamLearn_Inference_Request, {jsonType: CMsgSteamLearn_Inference_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 19);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Request
 */
export type CMsgSteamLearn_InferenceMetadata_Request = Message<"CMsgSteamLearn_InferenceMetadata_Request"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId: number;

  /**
   * @generated from field: optional uint32 published_version = 4;
   */
  publishedVersion: number;

  /**
   * @generated from field: optional uint32 override_train_id = 5;
   */
  overrideTrainId: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Request
 */
export type CMsgSteamLearn_InferenceMetadata_RequestJson = {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional uint32 project_id = 3;
   */
  projectId?: number;

  /**
   * @generated from field: optional uint32 published_version = 4;
   */
  publishedVersion?: number;

  /**
   * @generated from field: optional uint32 override_train_id = 5;
   */
  overrideTrainId?: number;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Request.
 * Use `create(CMsgSteamLearn_InferenceMetadata_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_RequestSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Request, {jsonType: CMsgSteamLearn_InferenceMetadata_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 20);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadataBackend_Request
 */
export type CMsgSteamLearn_InferenceMetadataBackend_Request = Message<"CMsgSteamLearn_InferenceMetadataBackend_Request"> & {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId: number;

  /**
   * @generated from field: optional uint32 fetch_id = 2;
   */
  fetchId: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadataBackend_Request
 */
export type CMsgSteamLearn_InferenceMetadataBackend_RequestJson = {
  /**
   * @generated from field: optional uint32 project_id = 1;
   */
  projectId?: number;

  /**
   * @generated from field: optional uint32 fetch_id = 2;
   */
  fetchId?: number;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadataBackend_Request.
 * Use `create(CMsgSteamLearn_InferenceMetadataBackend_RequestSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadataBackend_RequestSchema: GenMessage<CMsgSteamLearn_InferenceMetadataBackend_Request, {jsonType: CMsgSteamLearn_InferenceMetadataBackend_RequestJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 21);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response
 */
export type CMsgSteamLearn_InferenceMetadata_Response = Message<"CMsgSteamLearn_InferenceMetadata_Response"> & {
  /**
   * @generated from field: optional ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];
   */
  inferenceMetadataResult: ESteamLearnInferenceMetadataResult;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;
   */
  rowRange?: CMsgSteamLearn_InferenceMetadata_Response_RowRange;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;
   */
  ranges: CMsgSteamLearn_InferenceMetadata_Response_Range[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;
   */
  stdDevs: CMsgSteamLearn_InferenceMetadata_Response_StdDev[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;
   */
  compactTables: CMsgSteamLearn_InferenceMetadata_Response_CompactTable[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable sequence_tables = 9;
   */
  sequenceTables: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;
   */
  kmeans: CMsgSteamLearn_InferenceMetadata_Response_KMeans[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry app_info = 8;
   */
  appInfo: CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry[];

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;
   */
  snapshotHistogram?: CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response
 */
export type CMsgSteamLearn_InferenceMetadata_ResponseJson = {
  /**
   * @generated from field: optional ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];
   */
  inferenceMetadataResult?: ESteamLearnInferenceMetadataResultJson;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;
   */
  rowRange?: CMsgSteamLearn_InferenceMetadata_Response_RowRangeJson;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;
   */
  ranges?: CMsgSteamLearn_InferenceMetadata_Response_RangeJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;
   */
  stdDevs?: CMsgSteamLearn_InferenceMetadata_Response_StdDevJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;
   */
  compactTables?: CMsgSteamLearn_InferenceMetadata_Response_CompactTableJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable sequence_tables = 9;
   */
  sequenceTables?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTableJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;
   */
  kmeans?: CMsgSteamLearn_InferenceMetadata_Response_KMeansJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry app_info = 8;
   */
  appInfo?: CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntryJson[];

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;
   */
  snapshotHistogram?: CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.
 * Use `create(CMsgSteamLearn_InferenceMetadata_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_ResponseSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response, {jsonType: CMsgSteamLearn_InferenceMetadata_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.RowRange
 */
export type CMsgSteamLearn_InferenceMetadata_Response_RowRange = Message<"CMsgSteamLearn_InferenceMetadata_Response.RowRange"> & {
  /**
   * @generated from field: optional uint64 min_row = 1;
   */
  minRow: bigint;

  /**
   * @generated from field: optional uint64 max_row = 2;
   */
  maxRow: bigint;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.RowRange
 */
export type CMsgSteamLearn_InferenceMetadata_Response_RowRangeJson = {
  /**
   * @generated from field: optional uint64 min_row = 1;
   */
  minRow?: string;

  /**
   * @generated from field: optional uint64 max_row = 2;
   */
  maxRow?: string;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.RowRange.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_RowRangeSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_RowRangeSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_RowRange, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_RowRangeJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 0);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.Range
 */
export type CMsgSteamLearn_InferenceMetadata_Response_Range = Message<"CMsgSteamLearn_InferenceMetadata_Response.Range"> & {
  /**
   * @generated from field: optional string data_element_path = 1;
   */
  dataElementPath: string;

  /**
   * @generated from field: optional float min_value = 2;
   */
  minValue: number;

  /**
   * @generated from field: optional float max_value = 3;
   */
  maxValue: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.Range
 */
export type CMsgSteamLearn_InferenceMetadata_Response_RangeJson = {
  /**
   * @generated from field: optional string data_element_path = 1;
   */
  dataElementPath?: string;

  /**
   * @generated from field: optional float min_value = 2;
   */
  minValue?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float max_value = 3;
   */
  maxValue?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.Range.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_RangeSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_RangeSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_Range, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_RangeJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 1);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.StdDev
 */
export type CMsgSteamLearn_InferenceMetadata_Response_StdDev = Message<"CMsgSteamLearn_InferenceMetadata_Response.StdDev"> & {
  /**
   * @generated from field: optional string data_element_path = 1;
   */
  dataElementPath: string;

  /**
   * @generated from field: optional float mean = 2;
   */
  mean: number;

  /**
   * @generated from field: optional float std_dev = 3;
   */
  stdDev: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.StdDev
 */
export type CMsgSteamLearn_InferenceMetadata_Response_StdDevJson = {
  /**
   * @generated from field: optional string data_element_path = 1;
   */
  dataElementPath?: string;

  /**
   * @generated from field: optional float mean = 2;
   */
  mean?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float std_dev = 3;
   */
  stdDev?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.StdDev.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_StdDevSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_StdDevSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_StdDev, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_StdDevJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 2);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable = Message<"CMsgSteamLearn_InferenceMetadata_Response.CompactTable"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;
   */
  mapValues: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;
   */
  mapMappings: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTableJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;
   */
  mapValues?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntryJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;
   */
  mapMappings?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntryJson[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_CompactTableSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_CompactTableSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_CompactTableJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 3);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry = Message<"CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry"> & {
  /**
   * @generated from field: optional uint32 value = 1;
   */
  value: number;

  /**
   * @generated from field: optional uint32 mapping = 2;
   */
  mapping: number;

  /**
   * @generated from field: optional uint64 count = 3;
   */
  count: bigint;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryJson = {
  /**
   * @generated from field: optional uint32 value = 1;
   */
  value?: number;

  /**
   * @generated from field: optional uint32 mapping = 2;
   */
  mapping?: number;

  /**
   * @generated from field: optional uint64 count = 3;
   */
  count?: string;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 3, 0);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry = Message<"CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry"> & {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntryJson = {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key?: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 3, 1);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry = Message<"CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry"> & {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntryJson = {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key?: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 3, 2);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable = Message<"CMsgSteamLearn_InferenceMetadata_Response.SequenceTable"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry map_values = 2;
   */
  mapValues: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry map_mappings = 3;
   */
  mapMappings: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry[];

  /**
   * @generated from field: optional uint64 total_count = 4;
   */
  totalCount: bigint;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTableJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry map_values = 2;
   */
  mapValues?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntryJson[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry map_mappings = 3;
   */
  mapMappings?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntryJson[];

  /**
   * @generated from field: optional uint64 total_count = 4;
   */
  totalCount?: string;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_SequenceTableSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_SequenceTableSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_SequenceTable, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_SequenceTableJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 4);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry = Message<"CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry"> & {
  /**
   * @generated from field: repeated uint32 values = 1;
   */
  values: number[];

  /**
   * @generated from field: optional uint32 crc = 2;
   */
  crc: number;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntryJson = {
  /**
   * @generated from field: repeated uint32 values = 1;
   */
  values?: number[];

  /**
   * @generated from field: optional uint32 crc = 2;
   */
  crc?: number;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count?: number;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 4, 0);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry = Message<"CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry"> & {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntryJson = {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key?: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntryJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 4, 1);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry = Message<"CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry"> & {
  /**
   * @generated from field: optional string key = 1;
   */
  key: string;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntryJson = {
  /**
   * @generated from field: optional string key = 1;
   */
  key?: string;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_EntryJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 4, 2);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.KMeans
 */
export type CMsgSteamLearn_InferenceMetadata_Response_KMeans = Message<"CMsgSteamLearn_InferenceMetadata_Response.KMeans"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;
   */
  clusters: CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.KMeans
 */
export type CMsgSteamLearn_InferenceMetadata_Response_KMeansJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;
   */
  clusters?: CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterJson[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.KMeans.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_KMeansSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_KMeansSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_KMeans, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_KMeansJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 5);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster
 */
export type CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster = Message<"CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;

  /**
   * @generated from field: optional float radius = 3;
   */
  radius: number;

  /**
   * @generated from field: optional float radius_75pct = 4;
   */
  radius75pct: number;

  /**
   * @generated from field: optional float radius_50pct = 5;
   */
  radius50pct: number;

  /**
   * @generated from field: optional float radius_25pct = 6;
   */
  radius25pct: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster
 */
export type CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterJson = {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float radius = 3;
   */
  radius?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float radius_75pct = 4;
   */
  radius75pct?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float radius_50pct = 5;
   */
  radius50pct?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float radius_25pct = 6;
   */
  radius25pct?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 5, 0);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram = Message<"CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram"> & {
  /**
   * @generated from field: optional float min_value = 1;
   */
  minValue: number;

  /**
   * @generated from field: optional float max_value = 2;
   */
  maxValue: number;

  /**
   * @generated from field: optional uint32 num_buckets = 3;
   */
  numBuckets: number;

  /**
   * @generated from field: repeated uint32 bucket_counts = 4;
   */
  bucketCounts: number[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram
 */
export type CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramJson = {
  /**
   * @generated from field: optional float min_value = 1;
   */
  minValue?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float max_value = 2;
   */
  maxValue?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 num_buckets = 3;
   */
  numBuckets?: number;

  /**
   * @generated from field: repeated uint32 bucket_counts = 4;
   */
  bucketCounts?: number[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 6);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.AppInfo
 */
export type CMsgSteamLearn_InferenceMetadata_Response_AppInfo = Message<"CMsgSteamLearn_InferenceMetadata_Response.AppInfo"> & {
  /**
   * @generated from field: optional string country_allow = 1;
   */
  countryAllow: string;

  /**
   * @generated from field: optional string country_deny = 2;
   */
  countryDeny: string;

  /**
   * @generated from field: optional bool platform_win = 3;
   */
  platformWin: boolean;

  /**
   * @generated from field: optional bool platform_mac = 4;
   */
  platformMac: boolean;

  /**
   * @generated from field: optional bool platform_linux = 5;
   */
  platformLinux: boolean;

  /**
   * @generated from field: optional bool adult_violence = 6;
   */
  adultViolence: boolean;

  /**
   * @generated from field: optional bool adult_sex = 7;
   */
  adultSex: boolean;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.AppInfo
 */
export type CMsgSteamLearn_InferenceMetadata_Response_AppInfoJson = {
  /**
   * @generated from field: optional string country_allow = 1;
   */
  countryAllow?: string;

  /**
   * @generated from field: optional string country_deny = 2;
   */
  countryDeny?: string;

  /**
   * @generated from field: optional bool platform_win = 3;
   */
  platformWin?: boolean;

  /**
   * @generated from field: optional bool platform_mac = 4;
   */
  platformMac?: boolean;

  /**
   * @generated from field: optional bool platform_linux = 5;
   */
  platformLinux?: boolean;

  /**
   * @generated from field: optional bool adult_violence = 6;
   */
  adultViolence?: boolean;

  /**
   * @generated from field: optional bool adult_sex = 7;
   */
  adultSex?: boolean;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.AppInfo.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_AppInfoSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_AppInfoSchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_AppInfo, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_AppInfoJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 7);

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry = Message<"CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry"> & {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.AppInfo value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_AppInfo;
};

/**
 * @generated from message CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry
 */
export type CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntryJson = {
  /**
   * @generated from field: optional uint32 key = 1;
   */
  key?: number;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceMetadata_Response.AppInfo value = 2;
   */
  value?: CMsgSteamLearn_InferenceMetadata_Response_AppInfoJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry.
 * Use `create(CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntrySchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntrySchema: GenMessage<CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry, {jsonType: CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntryJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 22, 8);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response
 */
export type CMsgSteamLearn_InferenceBackend_Response = Message<"CMsgSteamLearn_InferenceBackend_Response"> & {
  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;
   */
  outputs: CMsgSteamLearn_InferenceBackend_Response_Output[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response
 */
export type CMsgSteamLearn_InferenceBackend_ResponseJson = {
  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;
   */
  outputs?: CMsgSteamLearn_InferenceBackend_Response_OutputJson[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.
 * Use `create(CMsgSteamLearn_InferenceBackend_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_ResponseSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response, {jsonType: CMsgSteamLearn_InferenceBackend_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.Sequence
 */
export type CMsgSteamLearn_InferenceBackend_Response_Sequence = Message<"CMsgSteamLearn_InferenceBackend_Response.Sequence"> & {
  /**
   * @generated from field: repeated float value = 1;
   */
  value: number[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.Sequence
 */
export type CMsgSteamLearn_InferenceBackend_Response_SequenceJson = {
  /**
   * @generated from field: repeated float value = 1;
   */
  value?: (number | "NaN" | "Infinity" | "-Infinity")[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.Sequence.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_SequenceSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_SequenceSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_Sequence, {jsonType: CMsgSteamLearn_InferenceBackend_Response_SequenceJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 0);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.RegressionOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_RegressionOutput = Message<"CMsgSteamLearn_InferenceBackend_Response.RegressionOutput"> & {
  /**
   * @generated from field: optional float value = 1;
   */
  value: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.RegressionOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_RegressionOutputJson = {
  /**
   * @generated from field: optional float value = 1;
   */
  value?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_RegressionOutputSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_RegressionOutputSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_RegressionOutput, {jsonType: CMsgSteamLearn_InferenceBackend_Response_RegressionOutputJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 1);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput = Message<"CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput"> & {
  /**
   * @generated from field: optional float value = 1;
   */
  value: number;
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputJson = {
  /**
   * @generated from field: optional float value = 1;
   */
  value?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput, {jsonType: CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 2);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput = Message<"CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput"> & {
  /**
   * @generated from field: repeated float weight = 1;
   */
  weight: number[];

  /**
   * @generated from field: repeated float value = 2;
   */
  value: number[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Sequence value_sequence = 3;
   */
  valueSequence: CMsgSteamLearn_InferenceBackend_Response_Sequence[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputJson = {
  /**
   * @generated from field: repeated float weight = 1;
   */
  weight?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated float value = 2;
   */
  value?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Sequence value_sequence = 3;
   */
  valueSequence?: CMsgSteamLearn_InferenceBackend_Response_SequenceJson[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput, {jsonType: CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 3);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput = Message<"CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput"> & {
  /**
   * @generated from field: repeated float weight = 1;
   */
  weight: number[];

  /**
   * @generated from field: repeated float value = 2;
   */
  value: number[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Sequence value_sequence = 3;
   */
  valueSequence: CMsgSteamLearn_InferenceBackend_Response_Sequence[];
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput
 */
export type CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputJson = {
  /**
   * @generated from field: repeated float weight = 1;
   */
  weight?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated float value = 2;
   */
  value?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * @generated from field: repeated CMsgSteamLearn_InferenceBackend_Response.Sequence value_sequence = 3;
   */
  valueSequence?: CMsgSteamLearn_InferenceBackend_Response_SequenceJson[];
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput, {jsonType: CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 4);

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.Output
 */
export type CMsgSteamLearn_InferenceBackend_Response_Output = Message<"CMsgSteamLearn_InferenceBackend_Response.Output"> & {
  /**
   * @generated from oneof CMsgSteamLearn_InferenceBackend_Response.Output.ResponseType
   */
  ResponseType: {
    /**
     * @generated from field: CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;
     */
    value: CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput;
    case: "binaryCrossentropy";
  } | {
    /**
     * @generated from field: CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;
     */
    value: CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput;
    case: "categoricalCrossentropy";
  } | {
    /**
     * @generated from field: CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;
     */
    value: CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput;
    case: "multiBinaryCrossentropy";
  } | {
    /**
     * @generated from field: CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;
     */
    value: CMsgSteamLearn_InferenceBackend_Response_RegressionOutput;
    case: "regression";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message CMsgSteamLearn_InferenceBackend_Response.Output
 */
export type CMsgSteamLearn_InferenceBackend_Response_OutputJson = {
  /**
   * @generated from field: CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;
   */
  binaryCrossentropy?: CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputJson;

  /**
   * @generated from field: CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;
   */
  categoricalCrossentropy?: CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputJson;

  /**
   * @generated from field: CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;
   */
  multiBinaryCrossentropy?: CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputJson;

  /**
   * @generated from field: CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;
   */
  regression?: CMsgSteamLearn_InferenceBackend_Response_RegressionOutputJson;
};

/**
 * Describes the message CMsgSteamLearn_InferenceBackend_Response.Output.
 * Use `create(CMsgSteamLearn_InferenceBackend_Response_OutputSchema)` to create a new message.
 */
export const CMsgSteamLearn_InferenceBackend_Response_OutputSchema: GenMessage<CMsgSteamLearn_InferenceBackend_Response_Output, {jsonType: CMsgSteamLearn_InferenceBackend_Response_OutputJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 23, 5);

/**
 * @generated from message CMsgSteamLearn_Inference_Response
 */
export type CMsgSteamLearn_Inference_Response = Message<"CMsgSteamLearn_Inference_Response"> & {
  /**
   * @generated from field: optional ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];
   */
  inferenceResult: ESteamLearnInferenceResult;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceBackend_Response backend_response = 2;
   */
  backendResponse?: CMsgSteamLearn_InferenceBackend_Response;

  /**
   * @generated from field: repeated uint64 keys = 3;
   */
  keys: bigint[];
};

/**
 * @generated from message CMsgSteamLearn_Inference_Response
 */
export type CMsgSteamLearn_Inference_ResponseJson = {
  /**
   * @generated from field: optional ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];
   */
  inferenceResult?: ESteamLearnInferenceResultJson;

  /**
   * @generated from field: optional CMsgSteamLearn_InferenceBackend_Response backend_response = 2;
   */
  backendResponse?: CMsgSteamLearn_InferenceBackend_ResponseJson;

  /**
   * @generated from field: repeated uint64 keys = 3;
   */
  keys?: string[];
};

/**
 * Describes the message CMsgSteamLearn_Inference_Response.
 * Use `create(CMsgSteamLearn_Inference_ResponseSchema)` to create a new message.
 */
export const CMsgSteamLearn_Inference_ResponseSchema: GenMessage<CMsgSteamLearn_Inference_Response, {jsonType: CMsgSteamLearn_Inference_ResponseJson}> = /*@__PURE__*/
  messageDesc(file_steammessages_steamlearn_steamworkssdk, 24);

/**
 * @generated from enum ESteamLearnDataType
 */
export enum ESteamLearnDataType {
  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_INVALID = 0;
   */
  STEAMLEARN_DATATYPE_INVALID = 0,

  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_INT32 = 1;
   */
  STEAMLEARN_DATATYPE_INT32 = 1,

  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_FLOAT32 = 2;
   */
  STEAMLEARN_DATATYPE_FLOAT32 = 2,

  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_BOOL = 3;
   */
  STEAMLEARN_DATATYPE_BOOL = 3,

  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_STRING = 4;
   */
  STEAMLEARN_DATATYPE_STRING = 4,

  /**
   * @generated from enum value: STEAMLEARN_DATATYPE_OBJECT = 5;
   */
  STEAMLEARN_DATATYPE_OBJECT = 5,
}

/**
 * @generated from enum ESteamLearnDataType
 */
export type ESteamLearnDataTypeJson = "STEAMLEARN_DATATYPE_INVALID" | "STEAMLEARN_DATATYPE_INT32" | "STEAMLEARN_DATATYPE_FLOAT32" | "STEAMLEARN_DATATYPE_BOOL" | "STEAMLEARN_DATATYPE_STRING" | "STEAMLEARN_DATATYPE_OBJECT";

/**
 * Describes the enum ESteamLearnDataType.
 */
export const ESteamLearnDataTypeSchema: GenEnum<ESteamLearnDataType, ESteamLearnDataTypeJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 0);

/**
 * @generated from enum ESteammLearnRegisterDataSourceResult
 */
export enum ESteammLearnRegisterDataSourceResult {
  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR = 0;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED = 1;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED = 1,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND = 2;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND = 2,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC = 3;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC = 3,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME = 4;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME = 4,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION = 5;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION = 5,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED = 6;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED = 6,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID = 7;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID = 7,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN = 8;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN = 8,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP = 9;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP = 9,

  /**
   * @generated from enum value: STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED = 10;
   */
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED = 10,
}

/**
 * @generated from enum ESteammLearnRegisterDataSourceResult
 */
export type ESteammLearnRegisterDataSourceResultJson = "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP" | "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED";

/**
 * Describes the enum ESteammLearnRegisterDataSourceResult.
 */
export const ESteammLearnRegisterDataSourceResultSchema: GenEnum<ESteammLearnRegisterDataSourceResult, ESteammLearnRegisterDataSourceResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 1);

/**
 * @generated from enum ESteamLearnCacheDataResult
 */
export enum ESteamLearnCacheDataResult {
  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR = 0;
   */
  STEAMLEARN_CACHE_DATA_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_SUCCESS = 1;
   */
  STEAMLEARN_CACHE_DATA_SUCCESS = 1,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE = 2;
   */
  STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE = 2,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE = 3;
   */
  STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE = 3,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS = 4;
   */
  STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS = 4,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN = 5;
   */
  STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN = 5,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP = 6;
   */
  STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP = 6,

  /**
   * @generated from enum value: STEAMLEARN_CACHE_DATA_DISABLED = 7;
   */
  STEAMLEARN_CACHE_DATA_DISABLED = 7,
}

/**
 * @generated from enum ESteamLearnCacheDataResult
 */
export type ESteamLearnCacheDataResultJson = "STEAMLEARN_CACHE_DATA_ERROR" | "STEAMLEARN_CACHE_DATA_SUCCESS" | "STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE" | "STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE" | "STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS" | "STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN" | "STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP" | "STEAMLEARN_CACHE_DATA_DISABLED";

/**
 * Describes the enum ESteamLearnCacheDataResult.
 */
export const ESteamLearnCacheDataResultSchema: GenEnum<ESteamLearnCacheDataResult, ESteamLearnCacheDataResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 2);

/**
 * @generated from enum ESteamLearnSnapshotProjectResult
 */
export enum ESteamLearnSnapshotProjectResult {
  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR = 0;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED = 1;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED = 1,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED = 2;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED = 2,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID = 3;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID = 3,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE = 4;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE = 4,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY = 5;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY = 5,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION = 6;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION = 6,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG = 7;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG = 7,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN = 8;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN = 8,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP = 9;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP = 9,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR = 10;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR = 10,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_DISABLED = 11;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_DISABLED = 11,

  /**
   * @generated from enum value: STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION = 12;
   */
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION = 12,
}

/**
 * @generated from enum ESteamLearnSnapshotProjectResult
 */
export type ESteamLearnSnapshotProjectResultJson = "STEAMLEARN_SNAPSHOT_PROJECT_ERROR" | "STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED" | "STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR" | "STEAMLEARN_SNAPSHOT_PROJECT_DISABLED" | "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION";

/**
 * Describes the enum ESteamLearnSnapshotProjectResult.
 */
export const ESteamLearnSnapshotProjectResultSchema: GenEnum<ESteamLearnSnapshotProjectResult, ESteamLearnSnapshotProjectResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 3);

/**
 * @generated from enum ESteamLearnGetAccessTokensResult
 */
export enum ESteamLearnGetAccessTokensResult {
  /**
   * @generated from enum value: STEAMLEARN_GET_ACCESS_TOKENS_ERROR = 0;
   */
  STEAMLEARN_GET_ACCESS_TOKENS_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS = 1;
   */
  STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS = 1,
}

/**
 * @generated from enum ESteamLearnGetAccessTokensResult
 */
export type ESteamLearnGetAccessTokensResultJson = "STEAMLEARN_GET_ACCESS_TOKENS_ERROR" | "STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS";

/**
 * Describes the enum ESteamLearnGetAccessTokensResult.
 */
export const ESteamLearnGetAccessTokensResultSchema: GenEnum<ESteamLearnGetAccessTokensResult, ESteamLearnGetAccessTokensResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 4);

/**
 * @generated from enum ESteamLearnInferenceResult
 */
export enum ESteamLearnInferenceResult {
  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR = 0;
   */
  STEAMLEARN_INFERENCE_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_SUCCESS = 1;
   */
  STEAMLEARN_INFERENCE_SUCCESS = 1,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID = 2;
   */
  STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID = 2,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA = 3;
   */
  STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA = 3,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG = 4;
   */
  STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG = 4,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_FORBIDDEN = 5;
   */
  STEAMLEARN_INFERENCE_ERROR_FORBIDDEN = 5,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP = 6;
   */
  STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP = 6,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION = 7;
   */
  STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION = 7,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND = 8;
   */
  STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND = 8,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_ERROR_TOO_BUSY = 9;
   */
  STEAMLEARN_INFERENCE_ERROR_TOO_BUSY = 9,
}

/**
 * @generated from enum ESteamLearnInferenceResult
 */
export type ESteamLearnInferenceResultJson = "STEAMLEARN_INFERENCE_ERROR" | "STEAMLEARN_INFERENCE_SUCCESS" | "STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID" | "STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA" | "STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG" | "STEAMLEARN_INFERENCE_ERROR_FORBIDDEN" | "STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP" | "STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION" | "STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND" | "STEAMLEARN_INFERENCE_ERROR_TOO_BUSY";

/**
 * Describes the enum ESteamLearnInferenceResult.
 */
export const ESteamLearnInferenceResultSchema: GenEnum<ESteamLearnInferenceResult, ESteamLearnInferenceResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 5);

/**
 * @generated from enum ESteamLearnInferenceMetadataResult
 */
export enum ESteamLearnInferenceMetadataResult {
  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR = 0;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR = 0,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_SUCCESS = 1;
   */
  STEAMLEARN_INFERENCE_METADATA_SUCCESS = 1,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID = 2;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID = 2,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG = 3;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG = 3,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN = 4;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN = 4,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP = 5;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP = 5,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION = 6;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION = 6,

  /**
   * @generated from enum value: STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND = 7;
   */
  STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND = 7,
}

/**
 * @generated from enum ESteamLearnInferenceMetadataResult
 */
export type ESteamLearnInferenceMetadataResultJson = "STEAMLEARN_INFERENCE_METADATA_ERROR" | "STEAMLEARN_INFERENCE_METADATA_SUCCESS" | "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID" | "STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG" | "STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN" | "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP" | "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION" | "STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND";

/**
 * Describes the enum ESteamLearnInferenceMetadataResult.
 */
export const ESteamLearnInferenceMetadataResultSchema: GenEnum<ESteamLearnInferenceMetadataResult, ESteamLearnInferenceMetadataResultJson> = /*@__PURE__*/
  enumDesc(file_steammessages_steamlearn_steamworkssdk, 6);

/**
 * @generated from service SteamLearn
 */
export const SteamLearn: GenService<{
  /**
   * @generated from rpc SteamLearn.RegisterDataSource
   */
  registerDataSource: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_RegisterDataSource_RequestSchema;
    output: typeof CMsgSteamLearn_RegisterDataSource_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.CacheData
   */
  cacheData: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_CacheData_RequestSchema;
    output: typeof CMsgSteamLearn_CacheData_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.SnapshotProject
   */
  snapshotProject: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_SnapshotProject_RequestSchema;
    output: typeof CMsgSteamLearn_SnapshotProject_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.BatchOperation
   */
  batchOperation: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_BatchOperation_RequestSchema;
    output: typeof CMsgSteamLearn_BatchOperation_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.GetAccessTokens
   */
  getAccessTokens: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_GetAccessTokens_RequestSchema;
    output: typeof CMsgSteamLearn_GetAccessTokens_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.Inference
   */
  inference: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_Inference_RequestSchema;
    output: typeof CMsgSteamLearn_Inference_ResponseSchema;
  },
  /**
   * @generated from rpc SteamLearn.InferenceMetadata
   */
  inferenceMetadata: {
    methodKind: "unary";
    input: typeof CMsgSteamLearn_InferenceMetadata_RequestSchema;
    output: typeof CMsgSteamLearn_InferenceMetadata_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_steamlearn_steamworkssdk, 0);

