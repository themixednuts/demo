// @generated by protoc-gen-es v2.6.0 with parameter "target=ts,json_types=true"
// @generated from file te.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgQAngle, CMsgQAngleJson, CMsgVector, CMsgVectorJson } from "./networkbasetypes_pb";
import { file_networkbasetypes } from "./networkbasetypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file te.proto.
 */
export const file_te: GenFile = /*@__PURE__*/
  fileDesc("Cgh0ZS5wcm90byJJChNDTXNnVEVBcm1vclJpY29jaGV0EhgKA3BvcxgBIAEoCzILLkNNc2dWZWN0b3ISGAoDZGlyGAIgASgLMgsuQ01zZ1ZlY3RvciLhAQoOQ01zZ1RFQmFzZUJlYW0SEgoKbW9kZWxpbmRleBgBIAEoBhIRCgloYWxvaW5kZXgYAiABKAYSEgoKc3RhcnRmcmFtZRgDIAEoDRIRCglmcmFtZXJhdGUYBCABKA0SDAoEbGlmZRgFIAEoAhINCgV3aWR0aBgGIAEoAhIQCghlbmR3aWR0aBgHIAEoAhISCgpmYWRlbGVuZ3RoGAggASgNEhEKCWFtcGxpdHVkZRgJIAEoAhINCgVjb2xvchgKIAEoBxINCgVzcGVlZBgLIAEoDRINCgVmbGFncxgMIAEoDSKRAQoSQ01zZ1RFQmVhbUVudFBvaW50Eh0KBGJhc2UYASABKAsyDy5DTXNnVEVCYXNlQmVhbRITCgtzdGFydGVudGl0eRgCIAEoDRIRCgllbmRlbnRpdHkYAyABKA0SGgoFc3RhcnQYBCABKAsyCy5DTXNnVmVjdG9yEhgKA2VuZBgFIAEoCzILLkNNc2dWZWN0b3IiVwoOQ01zZ1RFQmVhbUVudHMSHQoEYmFzZRgBIAEoCzIPLkNNc2dURUJhc2VCZWFtEhMKC3N0YXJ0ZW50aXR5GAIgASgNEhEKCWVuZGVudGl0eRgDIAEoDSJnChBDTXNnVEVCZWFtUG9pbnRzEh0KBGJhc2UYASABKAsyDy5DTXNnVEVCYXNlQmVhbRIaCgVzdGFydBgCIAEoCzILLkNNc2dWZWN0b3ISGAoDZW5kGAMgASgLMgsuQ01zZ1ZlY3RvciJXCg5DTXNnVEVCZWFtUmluZxIdCgRiYXNlGAEgASgLMg8uQ01zZ1RFQmFzZUJlYW0SEwoLc3RhcnRlbnRpdHkYAiABKA0SEQoJZW5kZW50aXR5GAMgASgNIokBCg5DTXNnVEVCU1BEZWNhbBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBm5vcm1hbBgCIAEoCzILLkNNc2dWZWN0b3ISGgoFc2F4aXMYAyABKAsyCy5DTXNnVmVjdG9yEhIKBmVudGl0eRgEIAEoBToCLTESDQoFaW5kZXgYBSABKA0icwoNQ01zZ1RFQnViYmxlcxIZCgRtaW5zGAEgASgLMgsuQ01zZ1ZlY3RvchIZCgRtYXhzGAIgASgLMgsuQ01zZ1ZlY3RvchIOCgZoZWlnaHQYAyABKAISDQoFY291bnQYBCABKA0SDQoFc3BlZWQYBSABKAIidwoRQ01zZ1RFQnViYmxlVHJhaWwSGQoEbWlucxgBIAEoCzILLkNNc2dWZWN0b3ISGQoEbWF4cxgCIAEoCzILLkNNc2dWZWN0b3ISDgoGd2F0ZXJ6GAMgASgCEg0KBWNvdW50GAQgASgNEg0KBXNwZWVkGAUgASgCInkKC0NNc2dURURlY2FsEhsKBm9yaWdpbhgBIAEoCzILLkNNc2dWZWN0b3ISGgoFc3RhcnQYAiABKAsyCy5DTXNnVmVjdG9yEhIKBmVudGl0eRgDIAEoBToCLTESDgoGaGl0Ym94GAQgASgNEg0KBWluZGV4GAUgASgNIrEDCg5DTXNnRWZmZWN0RGF0YRIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhoKBXN0YXJ0GAIgASgLMgsuQ01zZ1ZlY3RvchIbCgZub3JtYWwYAyABKAsyCy5DTXNnVmVjdG9yEhsKBmFuZ2xlcxgEIAEoCzILLkNNc2dRQW5nbGUSGAoGZW50aXR5GAUgASgHOggxNjc3NzIxNRIdCgtvdGhlcmVudGl0eRgGIAEoBzoIMTY3NzcyMTUSDQoFc2NhbGUYByABKAISEQoJbWFnbml0dWRlGAggASgCEg4KBnJhZGl1cxgJIAEoAhITCgtzdXJmYWNlcHJvcBgKIAEoBxITCgtlZmZlY3RpbmRleBgLIAEoBhISCgpkYW1hZ2V0eXBlGAwgASgNEhAKCG1hdGVyaWFsGA0gASgNEg4KBmhpdGJveBgOIAEoDRINCgVjb2xvchgPIAEoDRINCgVmbGFncxgQIAEoDRIXCg9hdHRhY2htZW50aW5kZXgYESABKAUSEgoKZWZmZWN0bmFtZRgSIAEoDRIWCg5hdHRhY2htZW50bmFtZRgTIAEoDSI7ChRDTXNnVEVFZmZlY3REaXNwYXRjaBIjCgplZmZlY3RkYXRhGAEgASgLMg8uQ01zZ0VmZmVjdERhdGEiWwoSQ01zZ1RFRW5lcmd5U3BsYXNoEhgKA3BvcxgBIAEoCzILLkNNc2dWZWN0b3ISGAoDZGlyGAIgASgLMgsuQ01zZ1ZlY3RvchIRCglleHBsb3NpdmUYAyABKAgiQgoKQ01zZ1RFRml6ehISCgZlbnRpdHkYASABKAU6Ai0xEg8KB2RlbnNpdHkYAiABKA0SDwoHY3VycmVudBgDIAEoBSL5AQoUQ01zZ1RFU2hhdHRlclN1cmZhY2USGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIbCgZhbmdsZXMYAiABKAsyCy5DTXNnUUFuZ2xlEhoKBWZvcmNlGAMgASgLMgsuQ01zZ1ZlY3RvchIdCghmb3JjZXBvcxgEIAEoCzILLkNNc2dWZWN0b3ISDQoFd2lkdGgYBSABKAISDgoGaGVpZ2h0GAYgASgCEhEKCXNoYXJkc2l6ZRgHIAEoAhITCgtzdXJmYWNldHlwZRgIIAEoDRISCgpmcm9udGNvbG9yGAkgASgHEhEKCWJhY2tjb2xvchgKIAEoByJgChBDTXNnVEVHbG93U3ByaXRlEhsKBm9yaWdpbhgBIAEoCzILLkNNc2dWZWN0b3ISDQoFc2NhbGUYAiABKAISDAoEbGlmZRgDIAEoAhISCgpicmlnaHRuZXNzGAQgASgNIlYKDENNc2dURUltcGFjdBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBm5vcm1hbBgCIAEoCzILLkNNc2dWZWN0b3ISDAoEdHlwZRgDIAEoDSJqChFDTXNnVEVNdXp6bGVGbGFzaBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBmFuZ2xlcxgCIAEoCzILLkNNc2dRQW5nbGUSDQoFc2NhbGUYAyABKAISDAoEdHlwZRgEIAEoDSJvChFDTXNnVEVCbG9vZFN0cmVhbRIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEh4KCWRpcmVjdGlvbhgCIAEoCzILLkNNc2dWZWN0b3ISDQoFY29sb3IYAyABKAcSDgoGYW1vdW50GAQgASgNIpkCCg9DTXNnVEVFeHBsb3Npb24SGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchINCgVmbGFncxgDIAEoDRIbCgZub3JtYWwYBCABKAsyCy5DTXNnVmVjdG9yEg4KBnJhZGl1cxgGIAEoDRIRCgltYWduaXR1ZGUYByABKA0SFwoPYWZmZWN0X3JhZ2RvbGxzGAkgASgIEhIKCnNvdW5kX25hbWUYCiABKAkSFgoOZXhwbG9zaW9uX3R5cGUYCyABKA0SFQoNY3JlYXRlX2RlYnJpcxgMIAEoCBIiCg1kZWJyaXNfb3JpZ2luGA0gASgLMgsuQ01zZ1ZlY3RvchIaChJkZWJyaXNfc3VyZmFjZXByb3AYDiABKAciZgoKQ01zZ1RFRHVzdBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEgwKBHNpemUYAiABKAISDQoFc3BlZWQYAyABKAISHgoJZGlyZWN0aW9uGAQgASgLMgsuQ01zZ1ZlY3RvciJCChFDTXNnVEVMYXJnZUZ1bm5lbBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhAKCHJldmVyc2VkGAIgASgNIm4KDENNc2dURVNwYXJrcxIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhEKCW1hZ25pdHVkZRgCIAEoDRIOCgZsZW5ndGgYAyABKA0SHgoJZGlyZWN0aW9uGAQgASgLMgsuQ01zZ1ZlY3RvciK8AgoRQ01zZ1RFUGh5c2ljc1Byb3ASGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIdCgh2ZWxvY2l0eRgCIAEoCzILLkNNc2dWZWN0b3ISGwoGYW5nbGVzGAMgASgLMgsuQ01zZ1FBbmdsZRIMCgRza2luGAQgASgHEg0KBWZsYWdzGAUgASgNEg8KB2VmZmVjdHMYBiABKA0SDQoFY29sb3IYByABKAcSEgoKbW9kZWxpbmRleBgIIAEoBhIjCht1bnVzZWRfYnJlYWttb2RlbHNub3R0b21ha2UYCSABKA0SDQoFc2NhbGUYCiABKAISGwoGZG1ncG9zGAsgASgLMgsuQ01zZ1ZlY3RvchIbCgZkbWdkaXIYDCABKAsyCy5DTXNnVmVjdG9yEg8KB2RtZ3R5cGUYDSABKAUiWAoRQ01zZ1RFUGxheWVyRGVjYWwSGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchISCgZwbGF5ZXIYAiABKAU6Ai0xEhIKBmVudGl0eRgDIAEoBToCLTEicQoUQ01zZ1RFUHJvamVjdGVkRGVjYWwSGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIbCgZhbmdsZXMYAiABKAsyCy5DTXNnUUFuZ2xlEg0KBWluZGV4GAMgASgNEhAKCGRpc3RhbmNlGAQgASgCIjkKC0NNc2dURVNtb2tlEhsKBm9yaWdpbhgBIAEoCzILLkNNc2dWZWN0b3ISDQoFc2NhbGUYAiABKAIiWwoQQ01zZ1RFV29ybGREZWNhbBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBm5vcm1hbBgCIAEoCzILLkNNc2dWZWN0b3ISDQoFaW5kZXgYAyABKA0qvQQKDkVURVByb3RvYnVmSWRzEhgKE1RFX0VmZmVjdERpc3BhdGNoSWQQkAMSFwoSVEVfQXJtb3JSaWNvY2hldElkEJEDEhYKEVRFX0JlYW1FbnRQb2ludElkEJIDEhIKDVRFX0JlYW1FbnRzSWQQkwMSFAoPVEVfQmVhbVBvaW50c0lkEJQDEhIKDVRFX0JlYW1SaW5nSWQQlQMSEgoNVEVfQlNQRGVjYWxJZBCXAxIRCgxURV9CdWJibGVzSWQQmAMSFQoQVEVfQnViYmxlVHJhaWxJZBCZAxIPCgpURV9EZWNhbElkEJoDEhQKD1RFX1dvcmxkRGVjYWxJZBCbAxIWChFURV9FbmVyZ3lTcGxhc2hJZBCcAxIOCglURV9GaXp6SWQQnQMSGAoTVEVfU2hhdHRlclN1cmZhY2VJZBCeAxIUCg9URV9HbG93U3ByaXRlSWQQnwMSEAoLVEVfSW1wYWN0SWQQoAMSFQoQVEVfTXV6emxlRmxhc2hJZBChAxIVChBURV9CbG9vZFN0cmVhbUlkEKIDEhMKDlRFX0V4cGxvc2lvbklkEKMDEg4KCVRFX0R1c3RJZBCkAxIVChBURV9MYXJnZUZ1bm5lbElkEKUDEhAKC1RFX1NwYXJrc0lkEKYDEhUKEFRFX1BoeXNpY3NQcm9wSWQQpwMSFQoQVEVfUGxheWVyRGVjYWxJZBCoAxIYChNURV9Qcm9qZWN0ZWREZWNhbElkEKkDEg8KClRFX1Ntb2tlSWQQqgM", [file_networkbasetypes]);

/**
 * @generated from message CMsgTEArmorRicochet
 */
export type CMsgTEArmorRicochet = Message<"CMsgTEArmorRicochet"> & {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector dir = 2;
   */
  dir?: CMsgVector;
};

/**
 * @generated from message CMsgTEArmorRicochet
 */
export type CMsgTEArmorRicochetJson = {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector dir = 2;
   */
  dir?: CMsgVectorJson;
};

/**
 * Describes the message CMsgTEArmorRicochet.
 * Use `create(CMsgTEArmorRicochetSchema)` to create a new message.
 */
export const CMsgTEArmorRicochetSchema: GenMessage<CMsgTEArmorRicochet, {jsonType: CMsgTEArmorRicochetJson}> = /*@__PURE__*/
  messageDesc(file_te, 0);

/**
 * @generated from message CMsgTEBaseBeam
 */
export type CMsgTEBaseBeam = Message<"CMsgTEBaseBeam"> & {
  /**
   * @generated from field: optional fixed64 modelindex = 1;
   */
  modelindex: bigint;

  /**
   * @generated from field: optional fixed64 haloindex = 2;
   */
  haloindex: bigint;

  /**
   * @generated from field: optional uint32 startframe = 3;
   */
  startframe: number;

  /**
   * @generated from field: optional uint32 framerate = 4;
   */
  framerate: number;

  /**
   * @generated from field: optional float life = 5;
   */
  life: number;

  /**
   * @generated from field: optional float width = 6;
   */
  width: number;

  /**
   * @generated from field: optional float endwidth = 7;
   */
  endwidth: number;

  /**
   * @generated from field: optional uint32 fadelength = 8;
   */
  fadelength: number;

  /**
   * @generated from field: optional float amplitude = 9;
   */
  amplitude: number;

  /**
   * @generated from field: optional fixed32 color = 10;
   */
  color: number;

  /**
   * @generated from field: optional uint32 speed = 11;
   */
  speed: number;

  /**
   * @generated from field: optional uint32 flags = 12;
   */
  flags: number;
};

/**
 * @generated from message CMsgTEBaseBeam
 */
export type CMsgTEBaseBeamJson = {
  /**
   * @generated from field: optional fixed64 modelindex = 1;
   */
  modelindex?: string;

  /**
   * @generated from field: optional fixed64 haloindex = 2;
   */
  haloindex?: string;

  /**
   * @generated from field: optional uint32 startframe = 3;
   */
  startframe?: number;

  /**
   * @generated from field: optional uint32 framerate = 4;
   */
  framerate?: number;

  /**
   * @generated from field: optional float life = 5;
   */
  life?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float width = 6;
   */
  width?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float endwidth = 7;
   */
  endwidth?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 fadelength = 8;
   */
  fadelength?: number;

  /**
   * @generated from field: optional float amplitude = 9;
   */
  amplitude?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional fixed32 color = 10;
   */
  color?: number;

  /**
   * @generated from field: optional uint32 speed = 11;
   */
  speed?: number;

  /**
   * @generated from field: optional uint32 flags = 12;
   */
  flags?: number;
};

/**
 * Describes the message CMsgTEBaseBeam.
 * Use `create(CMsgTEBaseBeamSchema)` to create a new message.
 */
export const CMsgTEBaseBeamSchema: GenMessage<CMsgTEBaseBeam, {jsonType: CMsgTEBaseBeamJson}> = /*@__PURE__*/
  messageDesc(file_te, 1);

/**
 * @generated from message CMsgTEBeamEntPoint
 */
export type CMsgTEBeamEntPoint = Message<"CMsgTEBeamEntPoint"> & {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeam;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity: number;

  /**
   * @generated from field: optional CMsgVector start = 4;
   */
  start?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector end = 5;
   */
  end?: CMsgVector;
};

/**
 * @generated from message CMsgTEBeamEntPoint
 */
export type CMsgTEBeamEntPointJson = {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeamJson;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity?: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity?: number;

  /**
   * @generated from field: optional CMsgVector start = 4;
   */
  start?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector end = 5;
   */
  end?: CMsgVectorJson;
};

/**
 * Describes the message CMsgTEBeamEntPoint.
 * Use `create(CMsgTEBeamEntPointSchema)` to create a new message.
 */
export const CMsgTEBeamEntPointSchema: GenMessage<CMsgTEBeamEntPoint, {jsonType: CMsgTEBeamEntPointJson}> = /*@__PURE__*/
  messageDesc(file_te, 2);

/**
 * @generated from message CMsgTEBeamEnts
 */
export type CMsgTEBeamEnts = Message<"CMsgTEBeamEnts"> & {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeam;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity: number;
};

/**
 * @generated from message CMsgTEBeamEnts
 */
export type CMsgTEBeamEntsJson = {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeamJson;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity?: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity?: number;
};

/**
 * Describes the message CMsgTEBeamEnts.
 * Use `create(CMsgTEBeamEntsSchema)` to create a new message.
 */
export const CMsgTEBeamEntsSchema: GenMessage<CMsgTEBeamEnts, {jsonType: CMsgTEBeamEntsJson}> = /*@__PURE__*/
  messageDesc(file_te, 3);

/**
 * @generated from message CMsgTEBeamPoints
 */
export type CMsgTEBeamPoints = Message<"CMsgTEBeamPoints"> & {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeam;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector end = 3;
   */
  end?: CMsgVector;
};

/**
 * @generated from message CMsgTEBeamPoints
 */
export type CMsgTEBeamPointsJson = {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeamJson;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector end = 3;
   */
  end?: CMsgVectorJson;
};

/**
 * Describes the message CMsgTEBeamPoints.
 * Use `create(CMsgTEBeamPointsSchema)` to create a new message.
 */
export const CMsgTEBeamPointsSchema: GenMessage<CMsgTEBeamPoints, {jsonType: CMsgTEBeamPointsJson}> = /*@__PURE__*/
  messageDesc(file_te, 4);

/**
 * @generated from message CMsgTEBeamRing
 */
export type CMsgTEBeamRing = Message<"CMsgTEBeamRing"> & {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeam;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity: number;
};

/**
 * @generated from message CMsgTEBeamRing
 */
export type CMsgTEBeamRingJson = {
  /**
   * @generated from field: optional CMsgTEBaseBeam base = 1;
   */
  base?: CMsgTEBaseBeamJson;

  /**
   * @generated from field: optional uint32 startentity = 2;
   */
  startentity?: number;

  /**
   * @generated from field: optional uint32 endentity = 3;
   */
  endentity?: number;
};

/**
 * Describes the message CMsgTEBeamRing.
 * Use `create(CMsgTEBeamRingSchema)` to create a new message.
 */
export const CMsgTEBeamRingSchema: GenMessage<CMsgTEBeamRing, {jsonType: CMsgTEBeamRingJson}> = /*@__PURE__*/
  messageDesc(file_te, 5);

/**
 * @generated from message CMsgTEBSPDecal
 */
export type CMsgTEBSPDecal = Message<"CMsgTEBSPDecal"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector saxis = 3;
   */
  saxis?: CMsgVector;

  /**
   * @generated from field: optional int32 entity = 4 [default = -1];
   */
  entity: number;

  /**
   * @generated from field: optional uint32 index = 5;
   */
  index: number;
};

/**
 * @generated from message CMsgTEBSPDecal
 */
export type CMsgTEBSPDecalJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector saxis = 3;
   */
  saxis?: CMsgVectorJson;

  /**
   * @generated from field: optional int32 entity = 4 [default = -1];
   */
  entity?: number;

  /**
   * @generated from field: optional uint32 index = 5;
   */
  index?: number;
};

/**
 * Describes the message CMsgTEBSPDecal.
 * Use `create(CMsgTEBSPDecalSchema)` to create a new message.
 */
export const CMsgTEBSPDecalSchema: GenMessage<CMsgTEBSPDecal, {jsonType: CMsgTEBSPDecalJson}> = /*@__PURE__*/
  messageDesc(file_te, 6);

/**
 * @generated from message CMsgTEBubbles
 */
export type CMsgTEBubbles = Message<"CMsgTEBubbles"> & {
  /**
   * @generated from field: optional CMsgVector mins = 1;
   */
  mins?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector maxs = 2;
   */
  maxs?: CMsgVector;

  /**
   * @generated from field: optional float height = 3;
   */
  height: number;

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count: number;

  /**
   * @generated from field: optional float speed = 5;
   */
  speed: number;
};

/**
 * @generated from message CMsgTEBubbles
 */
export type CMsgTEBubblesJson = {
  /**
   * @generated from field: optional CMsgVector mins = 1;
   */
  mins?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector maxs = 2;
   */
  maxs?: CMsgVectorJson;

  /**
   * @generated from field: optional float height = 3;
   */
  height?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count?: number;

  /**
   * @generated from field: optional float speed = 5;
   */
  speed?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgTEBubbles.
 * Use `create(CMsgTEBubblesSchema)` to create a new message.
 */
export const CMsgTEBubblesSchema: GenMessage<CMsgTEBubbles, {jsonType: CMsgTEBubblesJson}> = /*@__PURE__*/
  messageDesc(file_te, 7);

/**
 * @generated from message CMsgTEBubbleTrail
 */
export type CMsgTEBubbleTrail = Message<"CMsgTEBubbleTrail"> & {
  /**
   * @generated from field: optional CMsgVector mins = 1;
   */
  mins?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector maxs = 2;
   */
  maxs?: CMsgVector;

  /**
   * @generated from field: optional float waterz = 3;
   */
  waterz: number;

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count: number;

  /**
   * @generated from field: optional float speed = 5;
   */
  speed: number;
};

/**
 * @generated from message CMsgTEBubbleTrail
 */
export type CMsgTEBubbleTrailJson = {
  /**
   * @generated from field: optional CMsgVector mins = 1;
   */
  mins?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector maxs = 2;
   */
  maxs?: CMsgVectorJson;

  /**
   * @generated from field: optional float waterz = 3;
   */
  waterz?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 count = 4;
   */
  count?: number;

  /**
   * @generated from field: optional float speed = 5;
   */
  speed?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgTEBubbleTrail.
 * Use `create(CMsgTEBubbleTrailSchema)` to create a new message.
 */
export const CMsgTEBubbleTrailSchema: GenMessage<CMsgTEBubbleTrail, {jsonType: CMsgTEBubbleTrailJson}> = /*@__PURE__*/
  messageDesc(file_te, 8);

/**
 * @generated from message CMsgTEDecal
 */
export type CMsgTEDecal = Message<"CMsgTEDecal"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVector;

  /**
   * @generated from field: optional int32 entity = 3 [default = -1];
   */
  entity: number;

  /**
   * @generated from field: optional uint32 hitbox = 4;
   */
  hitbox: number;

  /**
   * @generated from field: optional uint32 index = 5;
   */
  index: number;
};

/**
 * @generated from message CMsgTEDecal
 */
export type CMsgTEDecalJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVectorJson;

  /**
   * @generated from field: optional int32 entity = 3 [default = -1];
   */
  entity?: number;

  /**
   * @generated from field: optional uint32 hitbox = 4;
   */
  hitbox?: number;

  /**
   * @generated from field: optional uint32 index = 5;
   */
  index?: number;
};

/**
 * Describes the message CMsgTEDecal.
 * Use `create(CMsgTEDecalSchema)` to create a new message.
 */
export const CMsgTEDecalSchema: GenMessage<CMsgTEDecal, {jsonType: CMsgTEDecalJson}> = /*@__PURE__*/
  messageDesc(file_te, 9);

/**
 * @generated from message CMsgEffectData
 */
export type CMsgEffectData = Message<"CMsgEffectData"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector normal = 3;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 4;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional fixed32 entity = 5 [default = 16777215];
   */
  entity: number;

  /**
   * @generated from field: optional fixed32 otherentity = 6 [default = 16777215];
   */
  otherentity: number;

  /**
   * @generated from field: optional float scale = 7;
   */
  scale: number;

  /**
   * @generated from field: optional float magnitude = 8;
   */
  magnitude: number;

  /**
   * @generated from field: optional float radius = 9;
   */
  radius: number;

  /**
   * @generated from field: optional fixed32 surfaceprop = 10;
   */
  surfaceprop: number;

  /**
   * @generated from field: optional fixed64 effectindex = 11;
   */
  effectindex: bigint;

  /**
   * @generated from field: optional uint32 damagetype = 12;
   */
  damagetype: number;

  /**
   * @generated from field: optional uint32 material = 13;
   */
  material: number;

  /**
   * @generated from field: optional uint32 hitbox = 14;
   */
  hitbox: number;

  /**
   * @generated from field: optional uint32 color = 15;
   */
  color: number;

  /**
   * @generated from field: optional uint32 flags = 16;
   */
  flags: number;

  /**
   * @generated from field: optional int32 attachmentindex = 17;
   */
  attachmentindex: number;

  /**
   * @generated from field: optional uint32 effectname = 18;
   */
  effectname: number;

  /**
   * @generated from field: optional uint32 attachmentname = 19;
   */
  attachmentname: number;
};

/**
 * @generated from message CMsgEffectData
 */
export type CMsgEffectDataJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector start = 2;
   */
  start?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector normal = 3;
   */
  normal?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 4;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional fixed32 entity = 5 [default = 16777215];
   */
  entity?: number;

  /**
   * @generated from field: optional fixed32 otherentity = 6 [default = 16777215];
   */
  otherentity?: number;

  /**
   * @generated from field: optional float scale = 7;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float magnitude = 8;
   */
  magnitude?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float radius = 9;
   */
  radius?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional fixed32 surfaceprop = 10;
   */
  surfaceprop?: number;

  /**
   * @generated from field: optional fixed64 effectindex = 11;
   */
  effectindex?: string;

  /**
   * @generated from field: optional uint32 damagetype = 12;
   */
  damagetype?: number;

  /**
   * @generated from field: optional uint32 material = 13;
   */
  material?: number;

  /**
   * @generated from field: optional uint32 hitbox = 14;
   */
  hitbox?: number;

  /**
   * @generated from field: optional uint32 color = 15;
   */
  color?: number;

  /**
   * @generated from field: optional uint32 flags = 16;
   */
  flags?: number;

  /**
   * @generated from field: optional int32 attachmentindex = 17;
   */
  attachmentindex?: number;

  /**
   * @generated from field: optional uint32 effectname = 18;
   */
  effectname?: number;

  /**
   * @generated from field: optional uint32 attachmentname = 19;
   */
  attachmentname?: number;
};

/**
 * Describes the message CMsgEffectData.
 * Use `create(CMsgEffectDataSchema)` to create a new message.
 */
export const CMsgEffectDataSchema: GenMessage<CMsgEffectData, {jsonType: CMsgEffectDataJson}> = /*@__PURE__*/
  messageDesc(file_te, 10);

/**
 * @generated from message CMsgTEEffectDispatch
 */
export type CMsgTEEffectDispatch = Message<"CMsgTEEffectDispatch"> & {
  /**
   * @generated from field: optional CMsgEffectData effectdata = 1;
   */
  effectdata?: CMsgEffectData;
};

/**
 * @generated from message CMsgTEEffectDispatch
 */
export type CMsgTEEffectDispatchJson = {
  /**
   * @generated from field: optional CMsgEffectData effectdata = 1;
   */
  effectdata?: CMsgEffectDataJson;
};

/**
 * Describes the message CMsgTEEffectDispatch.
 * Use `create(CMsgTEEffectDispatchSchema)` to create a new message.
 */
export const CMsgTEEffectDispatchSchema: GenMessage<CMsgTEEffectDispatch, {jsonType: CMsgTEEffectDispatchJson}> = /*@__PURE__*/
  messageDesc(file_te, 11);

/**
 * @generated from message CMsgTEEnergySplash
 */
export type CMsgTEEnergySplash = Message<"CMsgTEEnergySplash"> & {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector dir = 2;
   */
  dir?: CMsgVector;

  /**
   * @generated from field: optional bool explosive = 3;
   */
  explosive: boolean;
};

/**
 * @generated from message CMsgTEEnergySplash
 */
export type CMsgTEEnergySplashJson = {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector dir = 2;
   */
  dir?: CMsgVectorJson;

  /**
   * @generated from field: optional bool explosive = 3;
   */
  explosive?: boolean;
};

/**
 * Describes the message CMsgTEEnergySplash.
 * Use `create(CMsgTEEnergySplashSchema)` to create a new message.
 */
export const CMsgTEEnergySplashSchema: GenMessage<CMsgTEEnergySplash, {jsonType: CMsgTEEnergySplashJson}> = /*@__PURE__*/
  messageDesc(file_te, 12);

/**
 * @generated from message CMsgTEFizz
 */
export type CMsgTEFizz = Message<"CMsgTEFizz"> & {
  /**
   * @generated from field: optional int32 entity = 1 [default = -1];
   */
  entity: number;

  /**
   * @generated from field: optional uint32 density = 2;
   */
  density: number;

  /**
   * @generated from field: optional int32 current = 3;
   */
  current: number;
};

/**
 * @generated from message CMsgTEFizz
 */
export type CMsgTEFizzJson = {
  /**
   * @generated from field: optional int32 entity = 1 [default = -1];
   */
  entity?: number;

  /**
   * @generated from field: optional uint32 density = 2;
   */
  density?: number;

  /**
   * @generated from field: optional int32 current = 3;
   */
  current?: number;
};

/**
 * Describes the message CMsgTEFizz.
 * Use `create(CMsgTEFizzSchema)` to create a new message.
 */
export const CMsgTEFizzSchema: GenMessage<CMsgTEFizz, {jsonType: CMsgTEFizzJson}> = /*@__PURE__*/
  messageDesc(file_te, 13);

/**
 * @generated from message CMsgTEShatterSurface
 */
export type CMsgTEShatterSurface = Message<"CMsgTEShatterSurface"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional CMsgVector force = 3;
   */
  force?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector forcepos = 4;
   */
  forcepos?: CMsgVector;

  /**
   * @generated from field: optional float width = 5;
   */
  width: number;

  /**
   * @generated from field: optional float height = 6;
   */
  height: number;

  /**
   * @generated from field: optional float shardsize = 7;
   */
  shardsize: number;

  /**
   * @generated from field: optional uint32 surfacetype = 8;
   */
  surfacetype: number;

  /**
   * @generated from field: optional fixed32 frontcolor = 9;
   */
  frontcolor: number;

  /**
   * @generated from field: optional fixed32 backcolor = 10;
   */
  backcolor: number;
};

/**
 * @generated from message CMsgTEShatterSurface
 */
export type CMsgTEShatterSurfaceJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional CMsgVector force = 3;
   */
  force?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector forcepos = 4;
   */
  forcepos?: CMsgVectorJson;

  /**
   * @generated from field: optional float width = 5;
   */
  width?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float height = 6;
   */
  height?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float shardsize = 7;
   */
  shardsize?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 surfacetype = 8;
   */
  surfacetype?: number;

  /**
   * @generated from field: optional fixed32 frontcolor = 9;
   */
  frontcolor?: number;

  /**
   * @generated from field: optional fixed32 backcolor = 10;
   */
  backcolor?: number;
};

/**
 * Describes the message CMsgTEShatterSurface.
 * Use `create(CMsgTEShatterSurfaceSchema)` to create a new message.
 */
export const CMsgTEShatterSurfaceSchema: GenMessage<CMsgTEShatterSurface, {jsonType: CMsgTEShatterSurfaceJson}> = /*@__PURE__*/
  messageDesc(file_te, 14);

/**
 * @generated from message CMsgTEGlowSprite
 */
export type CMsgTEGlowSprite = Message<"CMsgTEGlowSprite"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale: number;

  /**
   * @generated from field: optional float life = 3;
   */
  life: number;

  /**
   * @generated from field: optional uint32 brightness = 4;
   */
  brightness: number;
};

/**
 * @generated from message CMsgTEGlowSprite
 */
export type CMsgTEGlowSpriteJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float life = 3;
   */
  life?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 brightness = 4;
   */
  brightness?: number;
};

/**
 * Describes the message CMsgTEGlowSprite.
 * Use `create(CMsgTEGlowSpriteSchema)` to create a new message.
 */
export const CMsgTEGlowSpriteSchema: GenMessage<CMsgTEGlowSprite, {jsonType: CMsgTEGlowSpriteJson}> = /*@__PURE__*/
  messageDesc(file_te, 15);

/**
 * @generated from message CMsgTEImpact
 */
export type CMsgTEImpact = Message<"CMsgTEImpact"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional uint32 type = 3;
   */
  type: number;
};

/**
 * @generated from message CMsgTEImpact
 */
export type CMsgTEImpactJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 type = 3;
   */
  type?: number;
};

/**
 * Describes the message CMsgTEImpact.
 * Use `create(CMsgTEImpactSchema)` to create a new message.
 */
export const CMsgTEImpactSchema: GenMessage<CMsgTEImpact, {jsonType: CMsgTEImpactJson}> = /*@__PURE__*/
  messageDesc(file_te, 16);

/**
 * @generated from message CMsgTEMuzzleFlash
 */
export type CMsgTEMuzzleFlash = Message<"CMsgTEMuzzleFlash"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional float scale = 3;
   */
  scale: number;

  /**
   * @generated from field: optional uint32 type = 4;
   */
  type: number;
};

/**
 * @generated from message CMsgTEMuzzleFlash
 */
export type CMsgTEMuzzleFlashJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional float scale = 3;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional uint32 type = 4;
   */
  type?: number;
};

/**
 * Describes the message CMsgTEMuzzleFlash.
 * Use `create(CMsgTEMuzzleFlashSchema)` to create a new message.
 */
export const CMsgTEMuzzleFlashSchema: GenMessage<CMsgTEMuzzleFlash, {jsonType: CMsgTEMuzzleFlashJson}> = /*@__PURE__*/
  messageDesc(file_te, 17);

/**
 * @generated from message CMsgTEBloodStream
 */
export type CMsgTEBloodStream = Message<"CMsgTEBloodStream"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector direction = 2;
   */
  direction?: CMsgVector;

  /**
   * @generated from field: optional fixed32 color = 3;
   */
  color: number;

  /**
   * @generated from field: optional uint32 amount = 4;
   */
  amount: number;
};

/**
 * @generated from message CMsgTEBloodStream
 */
export type CMsgTEBloodStreamJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector direction = 2;
   */
  direction?: CMsgVectorJson;

  /**
   * @generated from field: optional fixed32 color = 3;
   */
  color?: number;

  /**
   * @generated from field: optional uint32 amount = 4;
   */
  amount?: number;
};

/**
 * Describes the message CMsgTEBloodStream.
 * Use `create(CMsgTEBloodStreamSchema)` to create a new message.
 */
export const CMsgTEBloodStreamSchema: GenMessage<CMsgTEBloodStream, {jsonType: CMsgTEBloodStreamJson}> = /*@__PURE__*/
  messageDesc(file_te, 18);

/**
 * @generated from message CMsgTEExplosion
 */
export type CMsgTEExplosion = Message<"CMsgTEExplosion"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags: number;

  /**
   * @generated from field: optional CMsgVector normal = 4;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional uint32 radius = 6;
   */
  radius: number;

  /**
   * @generated from field: optional uint32 magnitude = 7;
   */
  magnitude: number;

  /**
   * @generated from field: optional bool affect_ragdolls = 9;
   */
  affectRagdolls: boolean;

  /**
   * @generated from field: optional string sound_name = 10;
   */
  soundName: string;

  /**
   * @generated from field: optional uint32 explosion_type = 11;
   */
  explosionType: number;

  /**
   * @generated from field: optional bool create_debris = 12;
   */
  createDebris: boolean;

  /**
   * @generated from field: optional CMsgVector debris_origin = 13;
   */
  debrisOrigin?: CMsgVector;

  /**
   * @generated from field: optional fixed32 debris_surfaceprop = 14;
   */
  debrisSurfaceprop: number;
};

/**
 * @generated from message CMsgTEExplosion
 */
export type CMsgTEExplosionJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags?: number;

  /**
   * @generated from field: optional CMsgVector normal = 4;
   */
  normal?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 radius = 6;
   */
  radius?: number;

  /**
   * @generated from field: optional uint32 magnitude = 7;
   */
  magnitude?: number;

  /**
   * @generated from field: optional bool affect_ragdolls = 9;
   */
  affectRagdolls?: boolean;

  /**
   * @generated from field: optional string sound_name = 10;
   */
  soundName?: string;

  /**
   * @generated from field: optional uint32 explosion_type = 11;
   */
  explosionType?: number;

  /**
   * @generated from field: optional bool create_debris = 12;
   */
  createDebris?: boolean;

  /**
   * @generated from field: optional CMsgVector debris_origin = 13;
   */
  debrisOrigin?: CMsgVectorJson;

  /**
   * @generated from field: optional fixed32 debris_surfaceprop = 14;
   */
  debrisSurfaceprop?: number;
};

/**
 * Describes the message CMsgTEExplosion.
 * Use `create(CMsgTEExplosionSchema)` to create a new message.
 */
export const CMsgTEExplosionSchema: GenMessage<CMsgTEExplosion, {jsonType: CMsgTEExplosionJson}> = /*@__PURE__*/
  messageDesc(file_te, 19);

/**
 * @generated from message CMsgTEDust
 */
export type CMsgTEDust = Message<"CMsgTEDust"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional float size = 2;
   */
  size: number;

  /**
   * @generated from field: optional float speed = 3;
   */
  speed: number;

  /**
   * @generated from field: optional CMsgVector direction = 4;
   */
  direction?: CMsgVector;
};

/**
 * @generated from message CMsgTEDust
 */
export type CMsgTEDustJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional float size = 2;
   */
  size?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional float speed = 3;
   */
  speed?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional CMsgVector direction = 4;
   */
  direction?: CMsgVectorJson;
};

/**
 * Describes the message CMsgTEDust.
 * Use `create(CMsgTEDustSchema)` to create a new message.
 */
export const CMsgTEDustSchema: GenMessage<CMsgTEDust, {jsonType: CMsgTEDustJson}> = /*@__PURE__*/
  messageDesc(file_te, 20);

/**
 * @generated from message CMsgTELargeFunnel
 */
export type CMsgTELargeFunnel = Message<"CMsgTELargeFunnel"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional uint32 reversed = 2;
   */
  reversed: number;
};

/**
 * @generated from message CMsgTELargeFunnel
 */
export type CMsgTELargeFunnelJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 reversed = 2;
   */
  reversed?: number;
};

/**
 * Describes the message CMsgTELargeFunnel.
 * Use `create(CMsgTELargeFunnelSchema)` to create a new message.
 */
export const CMsgTELargeFunnelSchema: GenMessage<CMsgTELargeFunnel, {jsonType: CMsgTELargeFunnelJson}> = /*@__PURE__*/
  messageDesc(file_te, 21);

/**
 * @generated from message CMsgTESparks
 */
export type CMsgTESparks = Message<"CMsgTESparks"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional uint32 magnitude = 2;
   */
  magnitude: number;

  /**
   * @generated from field: optional uint32 length = 3;
   */
  length: number;

  /**
   * @generated from field: optional CMsgVector direction = 4;
   */
  direction?: CMsgVector;
};

/**
 * @generated from message CMsgTESparks
 */
export type CMsgTESparksJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 magnitude = 2;
   */
  magnitude?: number;

  /**
   * @generated from field: optional uint32 length = 3;
   */
  length?: number;

  /**
   * @generated from field: optional CMsgVector direction = 4;
   */
  direction?: CMsgVectorJson;
};

/**
 * Describes the message CMsgTESparks.
 * Use `create(CMsgTESparksSchema)` to create a new message.
 */
export const CMsgTESparksSchema: GenMessage<CMsgTESparks, {jsonType: CMsgTESparksJson}> = /*@__PURE__*/
  messageDesc(file_te, 22);

/**
 * @generated from message CMsgTEPhysicsProp
 */
export type CMsgTEPhysicsProp = Message<"CMsgTEPhysicsProp"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector velocity = 2;
   */
  velocity?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 3;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional fixed32 skin = 4;
   */
  skin: number;

  /**
   * @generated from field: optional uint32 flags = 5;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 effects = 6;
   */
  effects: number;

  /**
   * @generated from field: optional fixed32 color = 7;
   */
  color: number;

  /**
   * @generated from field: optional fixed64 modelindex = 8;
   */
  modelindex: bigint;

  /**
   * @generated from field: optional uint32 unused_breakmodelsnottomake = 9;
   */
  unusedBreakmodelsnottomake: number;

  /**
   * @generated from field: optional float scale = 10;
   */
  scale: number;

  /**
   * @generated from field: optional CMsgVector dmgpos = 11;
   */
  dmgpos?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector dmgdir = 12;
   */
  dmgdir?: CMsgVector;

  /**
   * @generated from field: optional int32 dmgtype = 13;
   */
  dmgtype: number;
};

/**
 * @generated from message CMsgTEPhysicsProp
 */
export type CMsgTEPhysicsPropJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector velocity = 2;
   */
  velocity?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 3;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional fixed32 skin = 4;
   */
  skin?: number;

  /**
   * @generated from field: optional uint32 flags = 5;
   */
  flags?: number;

  /**
   * @generated from field: optional uint32 effects = 6;
   */
  effects?: number;

  /**
   * @generated from field: optional fixed32 color = 7;
   */
  color?: number;

  /**
   * @generated from field: optional fixed64 modelindex = 8;
   */
  modelindex?: string;

  /**
   * @generated from field: optional uint32 unused_breakmodelsnottomake = 9;
   */
  unusedBreakmodelsnottomake?: number;

  /**
   * @generated from field: optional float scale = 10;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: optional CMsgVector dmgpos = 11;
   */
  dmgpos?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector dmgdir = 12;
   */
  dmgdir?: CMsgVectorJson;

  /**
   * @generated from field: optional int32 dmgtype = 13;
   */
  dmgtype?: number;
};

/**
 * Describes the message CMsgTEPhysicsProp.
 * Use `create(CMsgTEPhysicsPropSchema)` to create a new message.
 */
export const CMsgTEPhysicsPropSchema: GenMessage<CMsgTEPhysicsProp, {jsonType: CMsgTEPhysicsPropJson}> = /*@__PURE__*/
  messageDesc(file_te, 23);

/**
 * @generated from message CMsgTEPlayerDecal
 */
export type CMsgTEPlayerDecal = Message<"CMsgTEPlayerDecal"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional int32 player = 2 [default = -1];
   */
  player: number;

  /**
   * @generated from field: optional int32 entity = 3 [default = -1];
   */
  entity: number;
};

/**
 * @generated from message CMsgTEPlayerDecal
 */
export type CMsgTEPlayerDecalJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional int32 player = 2 [default = -1];
   */
  player?: number;

  /**
   * @generated from field: optional int32 entity = 3 [default = -1];
   */
  entity?: number;
};

/**
 * Describes the message CMsgTEPlayerDecal.
 * Use `create(CMsgTEPlayerDecalSchema)` to create a new message.
 */
export const CMsgTEPlayerDecalSchema: GenMessage<CMsgTEPlayerDecal, {jsonType: CMsgTEPlayerDecalJson}> = /*@__PURE__*/
  messageDesc(file_te, 24);

/**
 * @generated from message CMsgTEProjectedDecal
 */
export type CMsgTEProjectedDecal = Message<"CMsgTEProjectedDecal"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional uint32 index = 3;
   */
  index: number;

  /**
   * @generated from field: optional float distance = 4;
   */
  distance: number;
};

/**
 * @generated from message CMsgTEProjectedDecal
 */
export type CMsgTEProjectedDecalJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngleJson;

  /**
   * @generated from field: optional uint32 index = 3;
   */
  index?: number;

  /**
   * @generated from field: optional float distance = 4;
   */
  distance?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgTEProjectedDecal.
 * Use `create(CMsgTEProjectedDecalSchema)` to create a new message.
 */
export const CMsgTEProjectedDecalSchema: GenMessage<CMsgTEProjectedDecal, {jsonType: CMsgTEProjectedDecalJson}> = /*@__PURE__*/
  messageDesc(file_te, 25);

/**
 * @generated from message CMsgTESmoke
 */
export type CMsgTESmoke = Message<"CMsgTESmoke"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale: number;
};

/**
 * @generated from message CMsgTESmoke
 */
export type CMsgTESmokeJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message CMsgTESmoke.
 * Use `create(CMsgTESmokeSchema)` to create a new message.
 */
export const CMsgTESmokeSchema: GenMessage<CMsgTESmoke, {jsonType: CMsgTESmokeJson}> = /*@__PURE__*/
  messageDesc(file_te, 26);

/**
 * @generated from message CMsgTEWorldDecal
 */
export type CMsgTEWorldDecal = Message<"CMsgTEWorldDecal"> & {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional uint32 index = 3;
   */
  index: number;
};

/**
 * @generated from message CMsgTEWorldDecal
 */
export type CMsgTEWorldDecalJson = {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVectorJson;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVectorJson;

  /**
   * @generated from field: optional uint32 index = 3;
   */
  index?: number;
};

/**
 * Describes the message CMsgTEWorldDecal.
 * Use `create(CMsgTEWorldDecalSchema)` to create a new message.
 */
export const CMsgTEWorldDecalSchema: GenMessage<CMsgTEWorldDecal, {jsonType: CMsgTEWorldDecalJson}> = /*@__PURE__*/
  messageDesc(file_te, 27);

/**
 * @generated from enum ETEProtobufIds
 */
export enum ETEProtobufIds {
  /**
   * @generated from enum value: TE_EffectDispatchId = 400;
   */
  TE_EffectDispatchId = 400,

  /**
   * @generated from enum value: TE_ArmorRicochetId = 401;
   */
  TE_ArmorRicochetId = 401,

  /**
   * @generated from enum value: TE_BeamEntPointId = 402;
   */
  TE_BeamEntPointId = 402,

  /**
   * @generated from enum value: TE_BeamEntsId = 403;
   */
  TE_BeamEntsId = 403,

  /**
   * @generated from enum value: TE_BeamPointsId = 404;
   */
  TE_BeamPointsId = 404,

  /**
   * @generated from enum value: TE_BeamRingId = 405;
   */
  TE_BeamRingId = 405,

  /**
   * @generated from enum value: TE_BSPDecalId = 407;
   */
  TE_BSPDecalId = 407,

  /**
   * @generated from enum value: TE_BubblesId = 408;
   */
  TE_BubblesId = 408,

  /**
   * @generated from enum value: TE_BubbleTrailId = 409;
   */
  TE_BubbleTrailId = 409,

  /**
   * @generated from enum value: TE_DecalId = 410;
   */
  TE_DecalId = 410,

  /**
   * @generated from enum value: TE_WorldDecalId = 411;
   */
  TE_WorldDecalId = 411,

  /**
   * @generated from enum value: TE_EnergySplashId = 412;
   */
  TE_EnergySplashId = 412,

  /**
   * @generated from enum value: TE_FizzId = 413;
   */
  TE_FizzId = 413,

  /**
   * @generated from enum value: TE_ShatterSurfaceId = 414;
   */
  TE_ShatterSurfaceId = 414,

  /**
   * @generated from enum value: TE_GlowSpriteId = 415;
   */
  TE_GlowSpriteId = 415,

  /**
   * @generated from enum value: TE_ImpactId = 416;
   */
  TE_ImpactId = 416,

  /**
   * @generated from enum value: TE_MuzzleFlashId = 417;
   */
  TE_MuzzleFlashId = 417,

  /**
   * @generated from enum value: TE_BloodStreamId = 418;
   */
  TE_BloodStreamId = 418,

  /**
   * @generated from enum value: TE_ExplosionId = 419;
   */
  TE_ExplosionId = 419,

  /**
   * @generated from enum value: TE_DustId = 420;
   */
  TE_DustId = 420,

  /**
   * @generated from enum value: TE_LargeFunnelId = 421;
   */
  TE_LargeFunnelId = 421,

  /**
   * @generated from enum value: TE_SparksId = 422;
   */
  TE_SparksId = 422,

  /**
   * @generated from enum value: TE_PhysicsPropId = 423;
   */
  TE_PhysicsPropId = 423,

  /**
   * @generated from enum value: TE_PlayerDecalId = 424;
   */
  TE_PlayerDecalId = 424,

  /**
   * @generated from enum value: TE_ProjectedDecalId = 425;
   */
  TE_ProjectedDecalId = 425,

  /**
   * @generated from enum value: TE_SmokeId = 426;
   */
  TE_SmokeId = 426,
}

/**
 * @generated from enum ETEProtobufIds
 */
export type ETEProtobufIdsJson = "TE_EffectDispatchId" | "TE_ArmorRicochetId" | "TE_BeamEntPointId" | "TE_BeamEntsId" | "TE_BeamPointsId" | "TE_BeamRingId" | "TE_BSPDecalId" | "TE_BubblesId" | "TE_BubbleTrailId" | "TE_DecalId" | "TE_WorldDecalId" | "TE_EnergySplashId" | "TE_FizzId" | "TE_ShatterSurfaceId" | "TE_GlowSpriteId" | "TE_ImpactId" | "TE_MuzzleFlashId" | "TE_BloodStreamId" | "TE_ExplosionId" | "TE_DustId" | "TE_LargeFunnelId" | "TE_SparksId" | "TE_PhysicsPropId" | "TE_PlayerDecalId" | "TE_ProjectedDecalId" | "TE_SmokeId";

/**
 * Describes the enum ETEProtobufIds.
 */
export const ETEProtobufIdsSchema: GenEnum<ETEProtobufIds, ETEProtobufIdsJson> = /*@__PURE__*/
  enumDesc(file_te, 0);

